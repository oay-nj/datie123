<template>
	<view class="box-bg" id="top">
		<uni-nav-bar shadow :border="false" fixed>
			<template v-slot:left>
				<view class="row_style" @click="showDrawer">
					<image class="navi-left-image" src="/static/meun.svg" mode="aspectFit" />
				</view>
			</template>
			<view class="home-icon-bg">
				<image class="input-view" src="/static/DT-logo_color.png" mode="aspectFit" />
			</view>
			<template v-slot:right>
				<view class="row_style">
					<picker @change="bindPickerChange" :value="typeIndex" :range="array" range-key="type">
						<view class="text-h1">{{array[typeIndex].type}}</view>
					</picker>
					<image class="image-padding-left" src="/static/icon-drop-down.png" />
				</view>
			</template>
		</uni-nav-bar>
		<uni-drawer ref="showLeft" mode="left" :mask-click="true">
			<scroll-view style="height: 100%;" scroll-y="true">
				<view style="align-items: center; margin-top: 20px;">
					<image class="drawer-image" src="/static/DT-logo_color.png" mode="aspectFit"
						style="align-self: center; height: 40px;" />
				</view>
				<view class="drawer-item" @click="scrollToSection('article')" style="margin-top: 20px;">
					<image class="section-image" src="/static/热门推荐.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">热门推荐</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('game')">
					<image class="section-image" src="/static/比赛.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">赛事</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('gear')">
					<image class="section-image" src="/static/装备.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">装备</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('team')">
					<image class="section-image" src="/static/团队.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">团体</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('brand')">
					<image class="section-image" src="/static/品牌.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">品牌</text>
				</view>
				<view class="drawer-item" @click="jumpToAboutUs">
					<image class="section-image" src="/static/关于我们.svg" mode="aspectFit" />
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">关于我们</text>
				</view>
			</scroll-view>
		</uni-drawer>
		<swiper id="article" class="swiper-box" v-if="hotInfoList.length > 0"  :autoplay='true' :circular='true'>
			<swiper-item v-for="(item, index) in hotInfoList" :key="index">
				<view class="swiper-item">
					<image :src="item.bk_image" class="swiper-item-img" mode="aspectFill" @click="onClickBanner(item)"></image>
				</view>
			</swiper-item>
		</swiper>
		<uni-card id="game" :style="{margin: '4px', padding: '10px 0px 10px 10px'}" title="赛事">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/比赛.svg" mode="aspectFit" />
					<text class="text-h1">赛事</text>
					<view class="section-title-space"></view>
					<view class="rank2-tag-container">
						<uni-tag class="tag-padding" v-for="(tag, index) in gameRank2" :key="index" :text="tag"
							:custom-style="index === gameRank2Index ? 
						'background-color: #FBE7E9; border: none; font-size:14px; color: #CE2C32' : 
						'background-color: #EFEFEF; border: none; font-size:14px; color: #333333'" @click="bindGameRank2PickerChange(index)">
						</uni-tag>
					</view>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gameRank3" @tab-change="handleGameRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gameRank4" :key="index" :text="tag"
						:custom-style="tag === gameRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectGameRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGameList" :key="index" @click="onClickDetailItem(item)">
					<view class="row_style" style="padding-top: 6px">
						<image :src="item.icon" mode="aspectFit"
							style="width: 40px; height: 40px; padding-right: 5px; flex-shrink: 0;"></image>
						<view style="flex: 1; overflow: hidden;">
							<text class="grid-item-title" style="height: 18px;">{{item.title}}</text>
							<text class="grid-item-sub-title" style="height: 18px;">{{item.race_date+ ' ' + item.area}}</text>
						</view>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="gear" :style="{ margin: '4px' }" title="装备">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/装备.svg" mode="aspectFit" />
					<text class="text-h1">装备</text>
					<view class="section-title-space"></view>
					<view class="rank2-tag-container">
						<uni-tag class="tag-padding" v-for="(tag, index) in gearRank2" :key="index" :text="tag"
							:custom-style="index === gearRank2Index ? 
						'background-color: #FBE7E9; border: none; font-size:14px; color: #CE2C32' : 
						'background-color: #EFEFEF; border: none; font-size:14px; color: #333333'" @click="bindGearRank2PickerChange(index)">
						</uni-tag>
					</view>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gearRank3" @tab-change="handleGearRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gearRank4" :key="index" :text="tag"
						:custom-style="tag === gearRank4selected ?
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectGearRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGearList" :key="index"
					@click="onClickGearDetailItem(item)">
					<view class="row_style" style="padding-top: 6px">
						<image :src="item.icon" mode="aspectFit"
							style="width: 40px; height: 40px; padding-right: 5px; flex-shrink: 0;"></image>
						<view style="flex: 1; overflow: hidden;">
							<view class="row_style" style="height: 18px;">
								<text class="grid-item-title" style="padding-right: 0px;">{{item.title}}</text>
								<image v-if="item.new_yn == 1" class="new-badge-image" src="/static/new.svg" mode="aspectFit" />
							</view>
							<text class="grid-item-sub-title" style="height: 18px;">{{item.brand}}</text>
						</view>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="team" :style="{margin: '4px', padding: '10px 0px 10px 10px'}" title="团体">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/团队.svg" mode="aspectFit" />
					<text class="text-h1">团体</text>
					<view class="section-title-space"></view>
					<view class="rank2-tag-container">
						<uni-tag class="tag-padding" v-for="(tag, index) in teamRank2" :key="index" :text="tag"
							:custom-style="index === teamRank2Index ? 
						'background-color: #FBE7E9; border: none; font-size:14px; color: #CE2C32' : 
						'background-color: #EFEFEF; border: none; font-size:14px; color: #333333'" @click="bindTeamRank2PickerChange(index)">
						</uni-tag>
					</view>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller v-if="teamRank3.length > 0" :tabs="teamRank3" @tab-change="handleTeamRank3Selected">
				</horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in teamRank4" :key="index" :text="tag"
						:custom-style="tag === teamRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectTeamRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterTeamList" :key="index"
					@click="onClickTeamDetailItem(item)">
					<view class="row_style">
						<image :src="item.icon" mode="aspectFit" style="width: 32px; height: 32px; padding-right: 5px;">
						</image>
						<text class="grid-item-title">{{item.title}}</text>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="brand" :style="{ margin: '4px' }" title="品牌">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/品牌.svg" mode="aspectFit" />
					<text class="text-h1">品牌</text>
					<view class="section-title-space"></view>
					<view class="rank2-tag-container">
						<uni-tag class="tag-padding" v-for="(tag, index) in brandRank2" :key="index" :text="tag"
							:custom-style="index === brandRank2Index ? 
						'background-color: #FBE7E9; border: none; font-size:14px; color: #CE2C32' : 
						'background-color: #EFEFEF; border: none; font-size:14px; color: #333333'" @click="bindBrandRank2PickerChange(index)">
						</uni-tag>
					</view>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="brandRank3" @tab-change="handleBrandRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in brandRank4" :key="index" :text="tag"
						:custom-style="tag === brandRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectBrandRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="5" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterBrandList" :key="index"
					@click="onClickBrandDetailItem(item)">
					<view class="cell-card">
						<image :src="item.icon" mode="aspectFit"
							style="width: 48px; height: 48px; padding-bottom: 4px;"></image>
						<text class="grid-item-title-brand">{{item.title}}</text>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<view class="beian-container">
			<text class="beian-text" @click="openBeianLink">苏ICP备2022016640号-3</text>
		</view>
	</view>
	<view class="back-to-top" @click="scrollToTop">
	    <image src="/static/返回顶部.svg" mode="widthFix" class="icon"></image>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif

	import EntryModel from '../../model/entryModel';
	import horizontalScroller from '../../components/horizontal-scroller.vue';
	// 缓存每页最多
	const MAX_CACHE_DATA = 100;
	// 缓存页签数量
	const MAX_CACHE_PAGE = 3;
	const TAB_PRELOAD_OFFSET = 1;

	export default {
		components: {
			horizontalScroller,
		},
		computed: {
			filterGameList() {
				// 过滤数据
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank3Cur = this.gameRank3selected;
				let rank4Cur = this.gameRank4selected;
				const filteredData = this.gameList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					return item.rank2 === rank2Cur &&
						item.rank3 === rank3Cur
				});
				return filteredData;
			},
			filterGearList() {
				// 过滤数据
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank3Cur = this.gearRank3selected;
				let rank4Cur = this.gearRank4selected;
				const filteredData = this.gearList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					return item.rank2 === rank2Cur &&
						item.rank3 === rank3Cur
				});
				return filteredData;
			},
			filterTeamList() {
				// 过滤数据
				// let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank3Cur = this.teamRank3selected;
				let rank4Cur = this.teamRank4selected;
				const filteredData = this.teamList.filter(item => {
					var r3 = true;
					if (rank3Cur.length > 0) {
						r3 = item.rank3 === rank3Cur;
					}
					var r4 = true;
					if (rank4Cur.length > 0) {
						r4 = item.rank4 === rank4Cur
					}
					return r3 && r4;
				});
				return filteredData;
			},
			filterBrandList() {
				// 过滤数据
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank3Cur = this.brandRank3selected;
				let rank4Cur = this.brandRank4selected;
				const filteredData = this.brandList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					if (rank3Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur
					}
					return item.rank2 === rank2Cur;
				});
				return filteredData;
			}
		},
		data() {
			return {
				array: [{
					type: '铁人三项'
				}],
				typeIndex: 0,
				hotInfoList: [],

				gameHierarchy: {},
				gameRank2: [],
				gameRank2Index: 0,
				gameRank3: [],
				gameRank3selected: '',
				gameRank4: [],
				gameRank4selected: '',
				gameList: [],

				gearHierarchy: {},
				gearRank2: [],
				gearRank2Index: 0,
				gearRank3: [],
				gearRank3selected: '',
				gearRank4: [],
				gearRank4selected: '',
				gearList: [],

				teamHierarchy: {},
				teamRank2: [],
				teamRank2Index: 0,
				teamRank3: [],
				teamRank3selected: '',
				teamRank4: [],
				teamRank4selected: '',
				teamList: [],

				brandHierarchy: {},
				brandRank2: [],
				brandRank2Index: 0,
				brandRank3: [],
				brandRank3selected: '',
				brandRank4: [],
				brandRank4selected: '',
				brandList: [],
				isWeChatEnvironment: false, // 初始状态，默认不是微信环境
			}
		},
		onReady() {
			this.queryDicList();
			this.queryGearDicList();
			this.queryTeamDicList();
			this.queryBrandDicList();
			this.queryHotInfoList();
			this.checkWeChatEnvironment();
			this.loadWeChatSDK();
			// this.queryData();
			// this.queryTrainData();
		},
		methods: {
			loadWeChatSDK() {
				if(this.isWeChatEnvironment){
					const script = document.createElement('script');
								script.src = 'https://res.wx.qq.com/open/js/jweixin-1.6.0.js';
								script.onload = () => {
									if (typeof wx !== 'undefined') {
										// callback();
										// console.error(typeof wx);
									} else {
										console.error('微信JS-SDK加载失败');
									}
								};
								document.head.appendChild(script);
								// 获取当前网页的URL，不包含#及其后面部分
								const url1 = encodeURIComponent(window.location.href.split('#')[0]);
								// const url = 'https://www.datie123.com';
								// console.error('当前 URL:', url1);
								// 调用后端API获取签名等信息
								uni.request({
									url: 'https://www.datie123.com/entry/getShareConfig?url=' + url1, // 替换为你的后端API地址
									method: 'GET',
									success: (res) => {
									if (res.statusCode === 200 && res.data) {
									this.configData = res.data;
									
									this.initWeChatSDK();
									} else {
									console.error('获取微信JS-SDK配置失败:', res);
								  }
								},
								fail: (error) => {
								  console.error('请求微信JS-SDK配置失败:', error);
								}
					});
				}else(
				console.error('当前非微信环境')
				)		
			},
			initWeChatSDK() {
				// console.error('获取到的配置数据:', this.configData);
				// console.error('获取到的配置数据:', JSON.stringify(this.configData, null, 2));
				  wx.config({
					debug: false, // 开启调试模式
					appId: this.configData.appId, // 必填，公众号的唯一标识
					timestamp: this.configData.timestamp, // 必填，生成签名的时间戳
					nonceStr: this.configData.nonceStr, // 必填，生成签名的随机串
					signature: this.configData.signature, // 必填，签名
					jsApiList: ['updateAppMessageShareData', 'updateTimelineShareData'] // 必填，需要使用的JS接口列表
				  });	
				wx.ready(() => {
				  // console.log('微信JS-SDK加载成功');
				  this.initWeChatShare();
				});  
				wx.error((res) => {
				  console.error('微信 JS SDK 配置失败:', res);		  
				});
			},
			initWeChatShare() {
			  const shareData = {
				title: '打铁123-打铁从这里开始！', // 分享标题
				desc: '提供铁人三项相关的赛事、装备、团体、训练、营养等内容', // 分享描述
				link: 'https://www.datie123.com', // 分享链接
				imgUrl: 'https://www.datie123.com/images/share.jpg', // 分享图标		
			  };		
				  wx.updateAppMessageShareData({
					...shareData,
					success: () => {
					  console.log('设置给朋友分享的数据成功');
					},
					fail: (err) => {
					  console.error('设置给朋友分享的数据失败:', err);
					}
				  });
				
				  // 设置朋友圈分享的数据
				  wx.updateTimelineShareData({
					...shareData,
					success: () => {
					  console.log('设置朋友圈分享的数据成功');
					},
					fail: (err) => {
					  console.error('设置朋友圈分享的数据失败:', err);
					}
				  });
			},
			checkWeChatEnvironment() {
			      const userAgent = navigator.userAgent.toLowerCase();
			      this.isWeChatEnvironment = /micromessenger/.test(userAgent);
			},
			showDrawer() {
				this.$refs.showLeft.open();
			},
			closeDrawer() {
				this.$refs.showLeft.close();
			},
			bindPickerChange: function(e) {
				// console.log('picker发送选择改变，携带值为：' + e.detail.value)
				// this.typeIndex = e.detail.value
				// this.queryData();
			},
			bindGameRank2PickerChange(index) {
				this.gameRank2Index = index;
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.gameHierarchy, "赛事", rank2Cur);
					this.gameRank3 = Object.keys(rank22);
					this.gameRank3selected = this.gameRank3[0] || '';
					let rank33 = this.getRank3Sublist(this.gearHierarchy, "赛事", rank2Cur, this.gameRank3selected);
					this.gameRank4 = rank33;
					this.gameRank4selected = rank33[0] || "";
				}
				this.queryGameData();
			},
			bindGearRank2PickerChange(index) {
				this.gearRank2Index = index;
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.gearHierarchy, "装备", rank2Cur);
					this.gearRank3 = Object.keys(rank22);
					this.gearRank3selected = this.gearRank3[0] || '';
					let rank33 = this.getRank3Sublist(this.gearHierarchy, "装备", rank2Cur, this.gearRank3selected);
					this.gearRank4 = rank33;
					this.gearRank4selected = rank33[0] || "";
				}
				this.queryGearData();
			},
			bindTeamRank2PickerChange(index) {
				this.teamRank2Index = index;
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.teamHierarchy, "团体", rank2Cur);
					this.teamRank3 = Object.keys(rank22);
					this.teamRank3selected = this.teamRank3[0] || '';
					let rank33 = this.getRank3Sublist(this.gearHierarchy, "团体", rank2Cur, this.teamRank3selected);
					this.teamRank4 = rank33;
					this.teamRank4selected = rank33[0] || "";
				}
				this.queryTeamData();
			},
			bindBrandRank2PickerChange(index) {
				this.brandRank2Index = index;
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.brandHierarchy, "品牌", rank2Cur);
					this.brandRank3 = Object.keys(rank22);
					this.brandRank3selected = this.brandRank3[0] || '';
					let rank33 = this.getRank3Sublist(this.gearHierarchy, "品牌", rank2Cur, this.brandRank3selected);
					this.brandRank4 = rank33;
					this.brandRank4selected = rank33[0] || "";
				}
				this.queryBrandData();
			},
			onSelectGameRank4(tab) {
				this.gameRank4selected = tab;
				this.queryGameData();
			},
			onSelectGearRank4(tab) {
				this.gearRank4selected = tab;
				this.queryGearData();
			},
			onSelectTeamRank4(tab) {
				this.teamRank4selected = tab;
				this.queryTeamData();
			},
			onSelectBrandRank4(tab) {
				this.brandRank4selected = tab;
			},
			handleGameRank3Selected(selectedTab) {
				this.gameRank3selected = selectedTab;
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank33 = this.getRank3Sublist(this.gameHierarchy, "赛事", rank2Cur, selectedTab);
				this.gameRank4 = rank33;
				this.gameRank4selected = rank33[0] || "";
				this.queryGameData();
			},
			handleGearRank3Selected(selectedTab) {
				this.gearRank3selected = selectedTab;
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank33 = this.getRank3Sublist(this.gearHierarchy, "装备", rank2Cur, selectedTab);
				this.gearRank4 = rank33;
				this.gearRank4selected = rank33[0] || "";
				this.queryGearData();
			},
			handleTeamRank3Selected(selectedTab) {
				this.teamRank3selected = selectedTab;
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank33 = this.getRank3Sublist(this.teamHierarchy, "团体", rank2Cur, selectedTab);
				this.teamRank4 = rank33;
				this.teamRank4selected = rank33[0] || "";
				this.queryTeamData();
			},
			handleBrandRank3Selected(selectedTab) {
				this.brandRank3selected = selectedTab;
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank33 = this.getRank3Sublist(this.brandHierarchy, "品牌", rank2Cur, selectedTab);
				this.brandRank4 = rank33;
				this.brandRank4selected = rank33[0] || "";
				this.queryBrandData();
			},
			
			onClickBanner(item) {
				console.error('123')
				this.addSingleStaticsDetail(item);
				// 获取目标链接
				let url = item.link_main;				
				switch (process.env.UNI_PLATFORM) {
				  case 'app-plus':
					console.log('当前环境是 App');
					plus.runtime.openURL(url);
					break;
				  case 'h5':
					console.log('当前环境是 H5');
					window.location.href = url;
					// window.open(url, '_blank');
					break;
				  case 'mp-weixin':
					console.log('当前环境是微信小程序');
					window.location.href = url;
					break;
				  // 添加其他情况...
				  default:
					console.log('未知环境');
					uni.navigateTo({
					  url: '/pages/news/chinaraces'
					});
					break;
				}    
			},

			onClickDetailItem(item) {
				let url = item.link_main;
				// #ifdef APP-PLUS
				plus.runtime.openURL(url);
				// #endif

				// #ifdef H5
				window.open(url, '_blank');
				// #endif
				this.addSingleStaticsDetail(item);
			},

			onClickGearDetailItem(item) {
				const mainUrl = item.link_main || "";
				const jdUrl = item.link_jd || "";
				const taobaoUrl = item.link_taobao || "";

				// Count how many valid URLs we have
				const urls = [mainUrl, jdUrl, taobaoUrl].filter(url => url.length > 0);

				if (urls.length > 1) {
					const itemList = [];
					if (mainUrl) itemList.push('去官网购买');
					if (jdUrl) itemList.push('去京东购买');
					if (taobaoUrl) itemList.push('去淘宝购买');

					uni.showActionSheet({
						itemList,
						success: (res) => {
							let url = '';
							if (mainUrl && res.tapIndex === 0) {
								url = mainUrl;
							} else if (jdUrl && ((mainUrl && res.tapIndex === 1) || (!mainUrl && res
									.tapIndex === 0))) {
								url = jdUrl;
							} else {
								url = taobaoUrl;
							}
							// #ifdef APP-PLUS
							plus.runtime.openURL(url);
							// #endif
							// #ifdef H5
							window.open(url, '_blank');
							// #endif
						}
					});
				}
				// If only one URL exists, navigate directly
				else if (urls.length === 1) {
					const url = mainUrl || jdUrl || taobaoUrl;
					// #ifdef APP-PLUS
					plus.runtime.openURL(url);
					// #endif
					// #ifdef H5
					window.open(url, '_blank');
					// #endif
				}
				this.addSingleStaticsDetail(item);
			},

			onClickTeamDetailItem(item) {
				const mainUrl = item.link_main || "";
				const wxUrl = item.wechat_public || "";
								
				if (mainUrl.length > 0 && wxUrl.length > 0) {
					const itemList = ["团体介绍", "微信公众号"];
					uni.showActionSheet({
						itemList,
						success: (res) => {
							let url = '';
							if (res.tapIndex === 0) {
								url = mainUrl;
							} else {
								url = wxUrl;
							}
							// #ifdef APP-PLUS
							plus.runtime.openURL(url);
							// #endif
							// #ifdef H5
							window.open(url, '_blank');
							// #endif
						}
					});
				} else {
					const url = mainUrl || wxUrl;
					// #ifdef APP-PLUS
					plus.runtime.openURL(url);
					// #endif
					// #ifdef H5
					window.open(url, '_blank');
					// #endif
				}
				this.addSingleStaticsDetail(item);
			},

			onClickBrandDetailItem(item) {
				let url = item.link_main;
				// #ifdef APP-PLUS
				plus.runtime.openURL(url);
				// #endif

				// #ifdef H5
				window.open(url, '_blank');
				// #endif
				this.addSingleStaticsDetail(item);
			},

			queryHotInfoList() {
				let sportType = "铁人三项";
				uni.request({
					url: 'https://datie123.com/entry/getEntryList',
					method: 'GET',
					data: {
						sport_type: sportType,
						rank1: "热门推荐",
					}
				}).then((result) => {
					console.log("EE", result);
					if (result.statusCode === 200) {
						// 成功处理
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.hotInfoList = resList;
					}
				});
			},

			queryGameData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank3Cur = this.gameRank3selected || "";
				let rank4Cur = this.gameRank4selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "赛事",
							rank2: rank2Cur,
							rank3: rank3Cur,
							rank4: rank4Cur,
							order_type: '1',
							entry_id: lastEntryId // Add entry_id parameter for pagination
						}
					});
				};
				uni.showLoading({
					title: '加载中...',
					mask: true
				});
				fetchPage().then((result) => {
					uni.hideLoading();
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.gameList = resList;
					}
				}).catch(() => {
					uni.hideLoading();
				});
			},

			queryGearData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank3Cur = this.gearRank3selected || "";
				let rank4Cur = this.gearRank4selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "装备",
							rank2: rank2Cur,
							rank3: rank3Cur,
							rank4: rank4Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				uni.showLoading({
					title: '加载中...',
					mask: true
				});
				fetchPage().then((result) => {
					console.log("QQQ", result);
					uni.hideLoading();
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.gearList = resList;
					}
				}).catch(() => {
					uni.hideLoading();
				});
			},

			queryTeamData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank3Cur = this.teamRank3selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "团体",
							rank2: rank2Cur,
							rank3: rank3Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				// First page request
				fetchPage().then((result) => {
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.teamList = resList;
					}
				});
			},

			queryTeamDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "团体"
					}
				}).then((result) => {
					// 成功处理
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.teamHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "团体");
						this.teamRank2 = Object.keys(rank2);
						let rank2Cur = this.teamRank2[this.teamRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "团体", rank2Cur);
							this.teamRank3 = Object.keys(rank22);
							if (this.teamRank3.length > 0) {
								let rank3Cur = this.teamRank3[0];
								this.teamRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "团体", rank2Cur, rank3Cur);
									this.teamRank4 = rank33;
									this.teamRank4selected = this.teamRank4[0] || "";
								}
							}
						}
						this.queryTeamData();
					}
				});
			},
			queryGearDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "装备"
					}
				}).then((result) => {
					// 成功处理					
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.gearHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "装备");
						this.gearRank2 = Object.keys(rank2);
						let rank2Cur = this.gearRank2[this.gearRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "装备", rank2Cur);
							this.gearRank3 = Object.keys(rank22);
							if (this.gearRank3.length > 0) {
								let rank3Cur = this.gearRank3[0];
								this.gearRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "装备", rank2Cur, rank3Cur);
									this.gearRank4 = rank33;
									this.gearRank4selected = this.gearRank4[0] || "";
								}
							}
						}
						this.queryGearData();
					}
				});
			},

			queryDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "赛事"
					}
				}).then((result) => {
					// 成功处理
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.gameHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "赛事");
						this.gameRank2 = Object.keys(rank2);
						let rank2Cur = this.gameRank2[this.gameRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "赛事", rank2Cur);
							this.gameRank3 = Object.keys(rank22);
							if (this.gameRank3.length > 0) {
								let rank3Cur = this.gameRank3[0];
								this.gameRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "赛事", rank2Cur, rank3Cur);
									this.gameRank4 = rank33;
									this.gameRank4selected = this.gameRank4[0] || "";
								}
							}
						}
						this.queryGameData();
					}
				});
			},

			buildHierarchy(data) {
				const hierarchy = {};
				data.forEach(item => {
					// 初始化 rank1
					if (!hierarchy[item.rank1]) {
						hierarchy[item.rank1] = {};
					}
					// 检查 rank2 是否存在，如果存在则继续
					if (item.rank2 !== undefined) {
						// 初始化 rank2
						if (!hierarchy[item.rank1][item.rank2]) {
							hierarchy[item.rank1][item.rank2] = {};
						}

						// 检查 rank3 是否存在，如果存在则继续
						if (item.rank3 !== undefined) {
							// 初始化 rank3
							if (!hierarchy[item.rank1][item.rank2][item.rank3]) {
								hierarchy[item.rank1][item.rank2][item.rank3] = [];
							}

							// 检查 rank4 是否存在，如果存在则添加到 rank3 对应的数组中
							if (item.rank4 !== undefined) {
								hierarchy[item.rank1][item.rank2][item.rank3].push(item.rank4);
							}
						}
					}
				});
				return hierarchy;
			},

			getRank1Sublist(hierarchy, rank1Key) {
				return hierarchy[rank1Key] || {};
			},

			getRank2Sublist(hierarchy, rank1Key, rank2Key) {
				return hierarchy[rank1Key] && hierarchy[rank1Key][rank2Key] || [];
			},

			getRank3Sublist(hierarchy, rank1Key, rank2Key, rank3Key) {
				return hierarchy[rank1Key] && hierarchy[rank1Key][rank2Key] && hierarchy[rank1Key][rank2Key][rank3Key] ||
				[];
			},

			openBeianLink() {
				// #ifdef APP-PLUS
				plus.runtime.openURL('https://beian.miit.gov.cn/');
				// #endif

				// #ifdef H5
				window.open('https://beian.miit.gov.cn/', '_blank');
				// #endif
			},

			jumpToAboutUs() {
				// #ifdef APP-PLUS
				plus.runtime.openURL('https://mp.weixin.qq.com/s/wJutrO8INBySSj51UOus5A');
				// #endif

				// #ifdef H5
				window.open('https://mp.weixin.qq.com/s/wJutrO8INBySSj51UOus5A', '_blank');
				// #endif
			},
			
			scrollToTop() {
				this.scrollToSection("top")
			},

			scrollToSection(sectionId) {
				// Close drawer first
				this.closeDrawer();

				// Use dom module to scroll to element
				// #ifdef APP-PLUS-NVUE
				const dom = weex.requireModule('dom');
				const el = this.$refs[sectionId];
				if (el) {
					dom.scrollToElement(el, {
						offset: 0,
						animated: true
					});
				}
				// #endif

				// For H5 platform
				// #ifdef H5
				const element = document.getElementById(sectionId);
				if (element) {
					element.scrollIntoView({
						behavior: 'smooth',
						block: 'start'
					});
				}
				// #endif
			},

			queryBrandData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank3Cur = this.brandRank3selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "品牌",
							rank2: rank2Cur,
							rank3: rank3Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				fetchPage().then((result) => {
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.brandList = resList;
					}
				});
			},

			queryBrandDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "品牌"
					}
				}).then((result) => {
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.brandHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "品牌");
						this.brandRank2 = Object.keys(rank2);
						let rank2Cur = this.brandRank2[this.brandRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "品牌", rank2Cur);
							this.brandRank3 = Object.keys(rank22);
							if (this.brandRank3.length > 0) {
								let rank3Cur = this.brandRank3[0];
								this.brandRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "品牌", rank2Cur, rank3Cur);
									this.brandRank4 = rank33;
								}
							}
						}
						this.queryBrandData();
					}
				});
			},

			addSingleStaticsDetail(item) {
				const currentTime = new Date().toString();
				let detailInfo = {
					entry_id: item.entry_id,
					element_id: item.id,
					click_time: currentTime
				}
				uni.request({
					url: 'https://datie123.com/entry/addSingleStaticsDetail',
					method: 'POST',
					data: {
						statics_detail: detailInfo,
					}
				}).then((result) => {
					console.log("EEEE", result);
				});
			},
		}
	}
</script>

<style lang="scss">
	$nav-height: 30px;

	.box-bg {
		background-color: #F5F5F5;
	}

	.drawer-text {
		margin-left: 6px;
	}

	.tag-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-left: 10px;
	}

	.grid-item-title {
		font-size: 12px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 6px;
	}

	.grid-item-title-brand {
		width: 60px;
		height: 42px;
		font-size: 12px;
		text-align: center;
		color: #333333;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 6px;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 2;
		/* 限制为两行 */
	}

	.grid-item-sub-title {
		font-size: 10px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 6px;
	}

	.tag-sub-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-right: 5px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.drawer-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-left: 16px;
		margin-bottom: 16px;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.section-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-top: 6px;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.section-title-space {
		display: flex;
		// flex-grow: 1;
		flex: 1;
	}

	.home-icon-bg {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		height: 100%;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.text-h1 {
		font-size: 14px;
		font-weight: bold;
		color: black;
	}

	.text-h2 {
		font-size: 15px;
		font-weight: bold;
		color: black;
	}

	.navi-left-image {
		height: 22px;
		width: 22px;
	}

	.row_style {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
	}

	.cell-card {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		align-items: center;
	}

	.tag-container {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		margin-top: 8px;
		align-items: center;
		justify-content: center;
	}
	
	.rank2-tag-container {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
	
	.new-badge-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 20px;
		height: 20px;
	}

	.section-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 20px;
		height: 20px;
	}

	.section-image-drop-down {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 28px;
		height: 30px;
	}

	.image-padding-left {
		width: 14px;
		height: 14px;
		padding-left: 1px;
	}

	.hr-line {
		height: 1px;
		/* 线的高 */
		background-color: #e5e5e5;
		/* 线的颜色 */
		border: none;
		/* 去除边框 */
		margin: 4px 0;
		/* 上下外边距 */
	}

	.drawer-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		width: 60%;
		// background-color: #ff0000;
	}

	.input-view {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		// width: 100%;
		flex-direction: row-reverse;
		// background-color: #ff0000;
		height: 90%;
		flex-wrap: nowrap;
	}

	.beian-container {
		padding: 10px;
		text-align: center;
		font-size: 14px;
		color: #999;
	}

	.beian-text {
		margin-right: 8px;
	}

	.beian-link {
		color: #999;
		text-decoration: none;
		/* 取消下划线 */
	}

	.swiper-box {
		width: 100%;
		display: flex;
		height: calc(100vw * 100 / 393); /* 动态计算高度 */
	}

	.swiper-item {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
	}
	
	.swiper-item-img {
		width: 100%;
		height: 100%;
		// pointer-events: none; /* 禁止图片交互 */
	}
	
	/* 返回顶部图标样式 */
	.back-to-top {
	  position: fixed;
	  right: 20px;
	  bottom: 20px;
	  width: 40px;
	  height: 40px;
	  background-color: #33333311;
	  border-radius: 50%;
	  border-width: 1px;
	  border-color: #E8E2E2;
	  display: flex;
	  align-items: center;
	  justify-content: center;
	  z-index: 999;
	  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* 添加阴影效果 */
	}
</style>