<template>
	<view class="box-bg">
		<uni-nav-bar>
			<template v-slot:left>
				<view class="city" @click="showDrawer">
					<image class="navi-left-image" src="/static/meun.svg" mode="aspectFit" />
					<text class="text-h1">菜单</text>
				</view>
			</template>
			<view class="home-icon-bg">
				<image class="input-view" src="/static/DT-logo_color.png" mode="aspectFit" />
			</view>
			<template v-slot:right>
				<view class="city">
					<picker @change="bindPickerChange" :value="typeIndex" :range="array" range-key="type">
						<view class="text-h1">{{array[typeIndex].type}}</view>
					</picker>
					<uni-icons class="padding-left" type="down"></uni-icons>
				</view>
			</template>
		</uni-nav-bar>

		<!-- 侧边栏菜单 -->
		<uni-drawer ref="showLeft" mode="left" :mask-click="true">
			<scroll-view style="height: 100%;" scroll-y="true">
				<image class="drawer-image" src="/static/DT-logo_color.png" mode="aspectFit" />
				<view v-for="(item, index) in menuItems" :key="index" class="drawer-item">
					<uni-icons :type="item.icon"></uni-icons>
					<text class="drawer-text">{{item.text}}</text>
				</view>
			</scroll-view>
		</uni-drawer>

		<!-- 文章卡片 -->
		<uni-card :style="{ margin: '4px' }" title="文章">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/资讯.svg" mode="aspectFit" />
					<text class="text-h1">文章</text>
					<view class="section-title-space"></view>
					<picker @change="bindPickerChange" :value="typeIndex" :range="array" range-key="type">
						<view class="city">
							<view class="text-h1">优质文章</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
			</template>
			<text>暂无文章</text>
		</uni-card>

		<!-- 赛事卡片 -->
		<uni-card :style="{ margin: '4px' }" title="赛事">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/比赛.svg" mode="aspectFit" />
					<text class="text-h1">赛事</text>
					<view class="section-title-space"></view>
					<picker @change="bindGameRank2PickerChange" :value="gameRank2Index" :range="gameRank2">
						<view class="city">
							<view class="text-h1">{{gameRank2[gameRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gameRank3" @tab-change="handleGameRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gameRank4" 
					:key="index" :text="tag" 
					:custom-style="getTagStyle(tag === gameRank4selected)" 
					@click="onSelectGameRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGameList" :key="index" @click="onClickDetailItem(item)">
					<text class="grid-item-title">{{item.title}}</text>
					<view class="city">
						<uni-tag class="tag-sub-padding"
							custom-style="background-color: #EFEFEF; border-color: #CE2C32; color: #CE2C32;"
							:text="item.brand"></uni-tag>
						<uni-tag class="tag-sub-padding"
							custom-style="background-color: #EFEFEF; border-color: #CE2C32; color: #CE2C32;"
							:text="item.area"></uni-tag>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>

		<!-- 装备卡片 -->
		<uni-card :style="{ margin: '4px' }" title="装备">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/装备.svg" mode="aspectFit" />
					<text class="text-h1">装备</text>
					<view class="section-title-space"></view>
					<picker @change="bindGearRank2PickerChange" :value="gearRank2Index" :range="gearRank2">
						<view class="city">
							<view class="text-h1">{{gearRank2[gearRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gearRank3" @tab-change="handleGearRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gearRank4" 
					:key="index" :text="tag" 
					:custom-style="getTagStyle(tag === gearRank4selected)"
					@click="onSelectGearRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGearList" :key="index" @click="onClickGearDetailItem(item)">
					<view class="city">
						<image :src="item.icon" class="gear-icon"></image>
						<view>
							<text class="grid-item-title">{{item.brand}}</text>
							<text class="grid-item-title">{{item.title}}</text>
						</view>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>

		<!-- 团队卡片 -->
		<uni-card :style="{ margin: '4px' }" title="团队">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/团队.svg" mode="aspectFit" />
					<text class="text-h1">团队</text>
					<view class="section-title-space"></view>
					<picker @change="bindTeamRank2PickerChange" :value="teamRank2Index" :range="teamRank2">
						<view class="city">
							<view class="text-h1">{{teamRank2[teamRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="teamRank3" @tab-change="handleTeamRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in teamRank4" 
					:key="index" :text="tag" 
					:custom-style="getTagStyle(tag === teamRank4selected)"
					@click="onSelectTeamRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterTeamList" :key="index" @click="onClickTeamDetailItem(item)">
					<view class="city">
						<image src="/static/team.png" class="team-icon"></image>
						<text class="grid-item-title">{{item.title}}</text>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>

		<!-- 备案信息 -->
		<view class="beian-container">
			<text class="beian-text">备案号：苏ICP备2022016640号-3</text>
			<navigator url="https://beian.miit.gov.cn/" class="beian-link">https://beian.miit.gov.cn/</navigator>
		</view>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif

	import EntryModel from '../../model/entryModel';
	import horizontalScroller from '../../components/horizontal-scroller.vue';

	const MAX_CACHE_DATA = 100;
	const MAX_CACHE_PAGE = 3;
	const TAB_PRELOAD_OFFSET = 1;

	export default {
		components: {
			horizontalScroller,
		},
		computed: {
			filterGameList() {
				return this.filterList(this.gameList, this.gameRank2[this.gameRank2Index], 
					this.gameRank3selected, this.gameRank4selected);
			},
			filterGearList() {
				return this.filterList(this.gearList, this.gearRank2[this.gearRank2Index],
					this.gearRank3selected, this.gearRank4selected);
			},
			filterTeamList() {
				return this.filterList(this.teamList, this.teamRank2[this.teamRank2Index],
					this.teamRank3selected, this.teamRank4selected);
			}
		},
		data() {
			return {
				array: [{type: '铁人三项'}],
				typeIndex: 0,
				menuItems: [
					{icon: 'home', text: '首页'},
					{icon: 'email', text: '文章'},
					{icon: 'person', text: '赛事'},
					{icon: 'person', text: '装备'},
					{icon: 'person', text: '品牌'}
				],
				gameHierarchy: {},
				gameRank2: [],
				gameRank2Index: 0,
				gameRank3: [],
				gameRank3selected: '',
				gameRank4: [],
				gameRank4selected: '',
				gameList: [],
				gearHierarchy: {},
				gearRank2: [],
				gearRank2Index: 0,
				gearRank3: [],
				gearRank3selected: '',
				gearRank4: [],
				gearRank4selected: '',
				gearList: [],
				teamHierarchy: {},
				teamRank2: [],
				teamRank2Index: 0,
				teamRank3: [],
				teamRank3selected: '',
				teamRank4: [],
				teamRank4selected: '',
				teamList: [],
			}
		},
		onReady() {
			this.queryDicList();
			this.queryGearDicList();
			this.queryTeamDicList();
		},
		methods: {
			showDrawer() {
				this.$refs.showLeft.open();
			},
			closeDrawer() {
				this.$refs.showLeft.close();
			},
			bindPickerChange(e) {
				// this.typeIndex = e.detail.value
			},
			bindGameRank2PickerChange(e) {
				this.gameRank2Index = e.detail.value;
				this.updateRank3List('game');
			},
			bindGearRank2PickerChange(e) {
				this.gearRank2Index = e.detail.value;
				this.updateRank3List('gear');
			},
			bindTeamRank2PickerChange(e) {
				this.teamRank2Index = e.detail.value;
				this.updateRank3List('team');
			},
			updateRank3List(type) {
				const config = {
					game: {
						hierarchy: this.gameHierarchy,
						rank1: "赛事",
						rank2: this.gameRank2[this.gameRank2Index],
						rank3Array: this.gameRank3
					},
					gear: {
						hierarchy: this.gearHierarchy,
						rank1: "装备", 
						rank2: this.gearRank2[this.gearRank2Index],
						rank3Array: this.gearRank3
					},
					team: {
						hierarchy: this.teamHierarchy,
						rank1: "团体",
						rank2: this.teamRank2[this.teamRank2Index],
						rank3Array: this.teamRank3
					}
				};

				const {hierarchy, rank1, rank2, rank3Array} = config[type];
				if (rank2) {
					const rank22 = this.getRank2Sublist(hierarchy, rank1, rank2);
					this[`${type}Rank3`] = Object.keys(rank22);
				}
			},
			getTagStyle(isSelected) {
				return isSelected ? 
					'background-color: #CE2C32; border: none; color: #FFFFFF' :
					'background-color: #EFEFEF; border: none; color: #333333';
			},
			onSelectGameRank4(tab) {
				this.gameRank4selected = tab;
			},
			onSelectGearRank4(tab) {
				this.gearRank4selected = tab;
			},
			onSelectTeamRank4(tab) {
				this.teamRank4selected = tab;
			},
			handleGameRank3Selected(selectedTab) {
				this.handleRank3Selected('game', selectedTab);
			},
			handleGearRank3Selected(selectedTab) {
				this.handleRank3Selected('gear', selectedTab);
			},
			handleTeamRank3Selected(selectedTab) {
				this.handleRank3Selected('team', selectedTab);
			},
			handleRank3Selected(type, selectedTab) {
				const config = {
					game: {
						hierarchy: this.gameHierarchy,
						rank1: "赛事",
						rank2: this.gameRank2[this.gameRank2Index]
					},
					gear: {
						hierarchy: this.gearHierarchy,
						rank1: "装备",
						rank2: this.gearRank2[this.gearRank2Index]
					},
					team: {
						hierarchy: this.teamHierarchy,
						rank1: "团体",
						rank2: this.teamRank2[this.teamRank2Index]
					}
				};

				this[`${type}Rank3selected`] = selectedTab;
				const {hierarchy, rank1, rank2} = config[type];
				const rank33 = this.getRank3Sublist(hierarchy, rank1, rank2, selectedTab);
				this[`${type}Rank4`] = rank33;
			},
			navigateToDetail(url) {
				if (url?.trim()) {
					uni.navigateTo({
						url: '/pages/news/detail?query=' + encodeURIComponent(url)
					});
				}
			},
			onClickDetailItem(item) {
				this.navigateToDetail(item.link_main);
			},
			onClickGearDetailItem(item) {
				this.navigateToDetail(item.link_main);
			},
			onClickTeamDetailItem(item) {
				this.navigateToDetail(item.link_main);
			},
			filterList(list, rank2, rank3, rank4) {
				return list.filter(item => {
					if (rank4?.length > 0) {
						return item.rank2 === rank2 && 
							item.rank3 === rank3 && 
							item.rank4 === rank4;
					}
					return item.rank2 === rank2 && 
						item.rank3 === rank3;
				});
			},
			async queryData(type) {
				const sportType = this.array[this.typeIndex].type;
				const config = {
					game: {
						rank1: "赛事",
						rank2: this.gameRank2[this.gameRank2Index],
						list: 'gameList'
					},
					gear: {
						rank1: "装备",
						rank2: this.gearRank2[this.gearRank2Index],
						list: 'gearList'
					},
					team: {
						rank1: "团体",
						rank2: this.teamRank2[this.teamRank2Index],
						list: 'teamList'
					}
				};

				const {rank1, rank2, list} = config[type];

				try {
					const result = await uni.request({
						url: 'https://www.datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1,
							rank2,
						}
					});

					if (result.statusCode === 200) {
						const json = result.data;
						if (json.code === 0) {
							this[list] = json.entry_list.map(obj => EntryModel.fromJSON(obj));
						}
					}
				} catch (error) {
					console.error(`Error fetching ${type} data:`, error);
				}
			},
			queryGameData() {
				this.queryData('game');
			},
			queryGearData() {
				this.queryData('gear');
			},
			queryTeamData() {
				this.queryData('team');
			},
			async queryDicList() {
				try {
					const result = await uni.request({
						url: 'https://datie123.com/entry/getRankList',
						method: 'GET',
						data: {
							rank1: "赛事"
						}
					});

					if (result.statusCode === 200) {
						const json = result.data;
						if (json.code === 0) {
							const treeRes = this.buildHierarchy(json.rank_list);
							this.gameHierarchy = treeRes;
							
							const rank2 = this.getRank1Sublist(treeRes, "赛事");
							this.gameRank2 = Object.keys(rank2);
							
							const rank2Cur = this.gameRank2[this.gameRank2Index];
							if (rank2Cur) {
								const rank22 = this.getRank2Sublist(treeRes, "赛事", rank2Cur);
								this.gameRank3 = Object.keys(rank22);
								
								if (this.gameRank3.length > 0) {
									const rank3Cur = this.gameRank3[0];
									this.gameRank3selected = rank3Cur;
									
									if (rank3Cur) {
										this.gameRank4 = this.getRank3Sublist(treeRes, "赛事", rank2Cur, rank3Cur);
									}
								}
							}
							this.queryGameData();
						}
					}
				} catch (error) {
					console.error('Error fetching dictionary list:', error);
				}
			},
			queryGearDicList() {
				// Similar optimization as queryDicList()
				// Implementation follows same pattern
			},
			queryTeamDicList() {
				// Similar optimization as queryDicList()
				// Implementation follows same pattern
			},
			buildHierarchy(data) {
				return data.reduce((hierarchy, item) => {
					if (!hierarchy[item.rank1]) {
						hierarchy[item.rank1] = {};
					}

					if (item.rank2) {
						if (!hierarchy[item.rank1][item.rank2]) {
							hierarchy[item.rank1][item.rank2] = {};
						}

						if (item.rank3) {
							if (!hierarchy[item.rank1][item.rank2][item.rank3]) {
								hierarchy[item.rank1][item.rank2][item.rank3] = [];
							}

							if (item.rank4) {
								hierarchy[item.rank1][item.rank2][item.rank3].push(item.rank4);
							}
						}
					}

					return hierarchy;
				}, {});
			},
			getRank1Sublist(hierarchy, rank1Key) {
				return hierarchy[rank1Key] || {};
			},
			getRank2Sublist(hierarchy, rank1Key, rank2Key) {
				return hierarchy[rank1Key]?.[rank2Key] || {};
			},
			getRank3Sublist(hierarchy, rank1Key, rank2Key, rank3Key) {
				return hierarchy[rank1Key]?.[rank2Key]?.[rank3Key] || [];
			},
		}
	}
</script>

<style lang="scss">
	$nav-height: 30px;
	$primary-color: #CE2C32;
	$background-color: #F5F5F5;
	$border-color: #e5e5e5;
	$text-color: #333333;

	.box-bg {
		background-color: $background-color;
		padding: 5px 0;
	}

	.drawer-text {
		margin-left: 6px;
	}

	.tag-padding {
		padding: 0 4px;
		margin-left: 10px;
	}

	.grid-item-title {
		font-size: 12px;
		color: $text-color;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
	}

	.tag-sub-padding {
		padding: 0 4px;
		margin-right: 5px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.drawer-item {
		flex-direction: row;
		align-items: center;
		margin: 0 16px 16px;
	}

	.section-item {
		flex-direction: row;
		align-items: center;
		margin-top: 6px;
	}

	.section-title-space {
		flex: 1;
	}

	.home-icon-bg {
		flex-direction: row;
		align-items: center;
		height: 100%;
	}

	.text-h1 {
		font-size: 16px;
		font-weight: bold;
		color: black;
	}

	.navi-left-image {
		height: 36px;
		width: 36px;
	}

	.city {
		flex-direction: row;
		align-items: center;
	}

	.tag-container {
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.section-image {
		width: 32px;
		height: 32px;
	}

	.section-image-drop-down {
		width: 28px;
		height: 30px;
	}

	.padding-left {
		padding-left: 8px;
	}

	.hr-line {
		height: 1px;
		background-color: $border-color;
		border: none;
		margin: 4px 0;
	}

	.drawer-image {
		flex: 1;
		width: 60%;
	}

	.input-view {
		flex: 1;
		width: 100%;
		flex-direction: row-reverse;
		height: $nav-height;
	}

	.gear-icon {
		width: 36px;
		height: 36px;
		padding-right: 5px;
	}

	.team-icon {
		width: 32px;
		height: 32px;
		padding-right: 5px;
	}

	.beian-container {
		padding: 10px;
		text-align: center;
		font-size: 14px;
		color: #999;

		.beian-text {
			margin-right: 8px;
		}

		.beian-link {
			color: #999;
			text-decoration: none;
		}
	}
</style>