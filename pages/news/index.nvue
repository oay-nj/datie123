<template>
	<view class="box-bg">
		<uni-nav-bar fixed>
			<template v-slot:left>
				<view class="city" @click="showDrawer">
					<image class="navi-left-image" src="/static/meun.svg" mode="aspectFit" />
					<text class="text-h1">菜单</text>
				</view>
			</template>
			<view class="home-icon-bg">
				<image class="input-view" src="/static/DT-logo_color.png" mode="aspectFit" />
			</view>
			<template v-slot:right>
				<view class="city">
					<picker @change="bindPickerChange" :value="typeIndex" :range="array" range-key="type">
						<view class="text-h1">{{array[typeIndex].type}}</view>
					</picker>
					<uni-icons class="padding-left" type="down"></uni-icons>
				</view>
			</template>
		</uni-nav-bar>
		<uni-drawer ref="showLeft" mode="left" :mask-click="true">
			<scroll-view style="height: 100%;" scroll-y="true">
				<view style="align-items: center; margin-top: 20px;">
					<image class="drawer-image" src="/static/DT-logo_color.png" mode="aspectFit"
						style="align-self: center; height: 40px;" />
				</view>
				<view class="drawer-item" @click="scrollToSection('article')" style="margin-top: 20px;">
					<uni-icons type="email"></uni-icons>
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">文章</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('game')">
					<uni-icons type="person"></uni-icons>
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">赛事</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('gear')">
					<uni-icons type="person"></uni-icons>
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">装备</text>
				</view>
				<view class="drawer-item" @click="scrollToSection('team')">
					<uni-icons type="person"></uni-icons>
					<text class="drawer-text" style="font-size: 18px; font-weight: bold;">团队</text>
				</view>
			</scroll-view>
		</uni-drawer>
		<uni-card id="article" :style="{ margin: '4px' }" title="文章">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/资讯.svg" mode="aspectFit" />
					<text class="text-h1">文章</text>
					<view class="section-title-space"></view>
					<view class="text-h1">优质文章</view>
				</view>
				<view class="hr-line"></view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in articleList" :key="index" @click="onClickDetailItem(item)">
					<text class="grid-item-title">{{item.title}}</text>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="game" :style="{ margin: '4px' }" title="赛事">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/比赛.svg" mode="aspectFit" />
					<text class="text-h1">赛事</text>
					<view class="section-title-space"></view>
					<picker @change="bindGameRank2PickerChange" :value="gameRank2Index" :range="gameRank2">
						<view class="city">
							<view class="text-h1">{{gameRank2[gameRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gameRank3" @tab-change="handleGameRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gameRank4" :key="index" :text="tag"
						:custom-style="tag === gameRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectGameRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGameList" :key="index" @click="onClickDetailItem(item)">
					<view class="city" style="padding-top: 6px">
						<image :src="item.icon" mode="aspectFit"
							style="width: 40px; height: 40px; padding-right: 5px; flex-shrink: 0;"></image>
						<view style="flex: 1; overflow: hidden;">
							<text class="grid-item-title" style="height: 18px;">{{item.title}}</text>
							<text class="grid-item-sub-title" style="height: 18px;">{{item.title_eng}}</text>
						</view>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="gear" :style="{ margin: '4px' }" title="装备">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/装备.svg" mode="aspectFit" />
					<text class="text-h1">装备</text>
					<view class="section-title-space"></view>
					<picker @change="bindGearRank2PickerChange" :value="gearRank2Index" :range="gearRank2">
						<view class="city">
							<view class="text-h1">{{gearRank2[gearRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="gearRank3" @tab-change="handleGearRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in gearRank4" :key="index" :text="tag"
						:custom-style="tag === gearRank4selected ?
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectGearRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterGearList" :key="index"
					@click="onClickGearDetailItem(item)">
					<view class="city" style="padding-top: 6px">
						<image :src="item.icon" mode="aspectFit"
							style="width: 40px; height: 40px; padding-right: 5px; flex-shrink: 0;"></image>
						<view style="flex: 1; overflow: hidden;">
							<text class="grid-item-title" style="height: 18px;">{{item.brand}}</text>
							<text class="grid-item-sub-title" style="height: 18px;">{{item.title}}</text>
						</view>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="team" :style="{ margin: '4px' }" title="团队">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/团队.svg" mode="aspectFit" />
					<text class="text-h1">团队</text>
					<view class="section-title-space"></view>
					<picker @change="bindTeamRank2PickerChange" :value="teamRank2Index" :range="teamRank2">
						<view class="city">
							<view class="text-h1">{{teamRank2[teamRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="teamRank3" @tab-change="handleTeamRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in teamRank4" :key="index" :text="tag"
						:custom-style="tag === teamRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectTeamRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="2" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterTeamList" :key="index"
					@click="onClickTeamDetailItem(item)">
					<view class="city">
						<image src="/static/team.png" style="width: 32px; height: 32px; padding-right: 5px;"></image>
						<text class="grid-item-title">{{item.title}}</text>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<uni-card id="brand" :style="{ margin: '4px' }" title="品牌">
			<template v-slot:title>
				<view class='section-item'>
					<image class="section-image" src="/static/品牌.png" mode="aspectFit" />
					<text class="text-h1">品牌</text>
					<view class="section-title-space"></view>
					<picker @change="bindBrandRank2PickerChange" :value="brandRank2Index" :range="brandRank2">
						<view class="city">
							<view class="text-h1">{{brandRank2[brandRank2Index]}}</view>
							<image class="section-image-drop-down" src="/static/frop-down.svg" mode="aspectFit" />
						</view>
					</picker>
				</view>
				<view class="hr-line"></view>
				<horizontalScroller :tabs="brandRank3" @tab-change="handleBrandRank3Selected"></horizontalScroller>
				<view class="tag-container">
					<uni-tag class="tag-padding" v-for="(tag, index) in brandRank4" :key="index" :text="tag"
						:custom-style="tag === brandRank4selected ? 
					'background-color: #FBE7E9; border: none; color: #CE2C32' : 
					'background-color: #EFEFEF; border: none; color: #333333'" @click="onSelectBrandRank4(tag)">
					</uni-tag>
				</view>
			</template>
			<uni-grid :column="5" :showBorder="false" :square="false">
				<uni-grid-item v-for="(item, index) in filterBrandList" :key="index"
					@click="onClickBrandDetailItem(item)">
					<view class="cell-card">
						<image src="/static/brand.png" style="width: 48px; height: 48px; padding-bottom: 4px;"></image>
						<text class="grid-item-title">{{item.title}}</text>
					</view>
				</uni-grid-item>
			</uni-grid>
		</uni-card>
		<view class="beian-container">
			<text class="beian-text" @click="openBeianLink">备案号：苏ICP备2022016640号-3</text>
		</view>
	</view>
</template>

<script>
	// #ifdef APP-PLUS
	const dom = weex.requireModule('dom');
	// #endif

	import EntryModel from '../../model/entryModel';
	import horizontalScroller from '../../components/horizontal-scroller.vue';
	// 缓存每页最多
	const MAX_CACHE_DATA = 100;
	// 缓存页签数量
	const MAX_CACHE_PAGE = 3;
	const TAB_PRELOAD_OFFSET = 1;

	export default {
		components: {
			horizontalScroller,
		},
		computed: {
			filterGameList() {
				// 过滤数据
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank3Cur = this.gameRank3selected;
				let rank4Cur = this.gameRank4selected;
				const filteredData = this.gameList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					return item.rank2 === rank2Cur &&
						item.rank3 === rank3Cur
				});
				return filteredData;
			},
			filterGearList() {
				// 过滤数据
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank3Cur = this.gearRank3selected;
				let rank4Cur = this.gearRank4selected;
				const filteredData = this.gearList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					return item.rank2 === rank2Cur &&
						item.rank3 === rank3Cur
				});
				return filteredData;
			},
			filterTeamList() {
				// 过滤数据
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank3Cur = this.teamRank3selected;
				let rank4Cur = this.teamRank4selected;
				const filteredData = this.teamList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					return item.rank2 === rank2Cur &&
						item.rank3 === rank3Cur
				});
				return filteredData;
			},
			filterBrandList() {
				// 过滤数据
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank3Cur = this.brandRank3selected;
				let rank4Cur = this.brandRank4selected;
				const filteredData = this.brandList.filter(item => {
					if (rank4Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur &&
							item.rank4 === rank4Cur
					}
					if (rank3Cur.length > 0) {
						return item.rank2 === rank2Cur &&
							item.rank3 === rank3Cur
					}
					return item.rank2 === rank2Cur;
				});
				return filteredData;
			}
		},
		data() {
			return {
				array: [{
					type: '铁人三项'
				}],
				typeIndex: 0,
				articleList: [],

				gameHierarchy: {},
				gameRank2: [],
				gameRank2Index: 0,
				gameRank3: [],
				gameRank3selected: '',
				gameRank4: [],
				gameRank4selected: '',
				gameList: [],

				gearHierarchy: {},
				gearRank2: [],
				gearRank2Index: 0,
				gearRank3: [],
				gearRank3selected: '',
				gearRank4: [],
				gearRank4selected: '',
				gearList: [],

				teamHierarchy: {},
				teamRank2: [],
				teamRank2Index: 0,
				teamRank3: [],
				teamRank3selected: '',
				teamRank4: [],
				teamRank4selected: '',
				teamList: [],

				brandHierarchy: {},
				brandRank2: [],
				brandRank2Index: 0,
				brandRank3: [],
				brandRank3selected: '',
				brandRank4: [],
				brandRank4selected: '',
				brandList: [],
			}
		},
		onReady() {
			this.queryDicList();
			this.queryGearDicList();
			this.queryTeamDicList();
			this.queryBrandDicList();
			this.queryArticleList();
			// this.queryData();
			// this.queryTrainData();
		},
		methods: {
			showDrawer() {
				this.$refs.showLeft.open();
			},
			closeDrawer() {
				this.$refs.showLeft.close();
			},
			bindPickerChange: function(e) {
				// console.log('picker发送选择改变，携带值为：' + e.detail.value)
				// this.typeIndex = e.detail.value
				// this.queryData();
			},
			bindGameRank2PickerChange: function(e) {
				this.gameRank2Index = e.detail.value
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.gameHierarchy, "赛事", rank2Cur);
					this.gameRank3 = Object.keys(rank22);
					this.gameRank3selected = this.gameRank3[0] || '';
				}
				this.gameRank4selected = "";
				this.queryGameData();
			},
			bindGearRank2PickerChange: function(e) {
				this.gearRank2Index = e.detail.value
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.gearHierarchy, "装备", rank2Cur);
					this.gearRank3 = Object.keys(rank22);
					this.gearRank3selected = this.gearRank3[0] || '';
				}
				this.gearRank4selected = "";
				this.queryGearData();
			},
			bindTeamRank2PickerChange: function(e) {
				this.teamRank2Index = e.detail.value
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.teamHierarchy, "团体", rank2Cur);
					this.teamRank3 = Object.keys(rank22);
					this.teamRank3selected = this.teamRank3[0] || '';
				}
				this.teamRank4selected = "";
				this.queryTeamData();
			},
			bindBrandRank2PickerChange: function(e) {
				this.brandRank2Index = e.detail.value
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				if (rank2Cur != undefined) {
					let rank22 = this.getRank2Sublist(this.brandHierarchy, "品牌", rank2Cur);
					this.brandRank3 = Object.keys(rank22);
					this.brandRank3selected = this.brandRank3[0] || '';
				}
				this.queryBrandData();
			},
			onSelectGameRank4(tab) {
				this.gameRank4selected = tab;
				this.queryGameData();
			},
			onSelectGearRank4(tab) {
				this.gearRank4selected = tab;
				this.queryGearData();
			},
			onSelectTeamRank4(tab) {
				this.teamRank4selected = tab;
				this.queryTeamData();
			},
			onSelectBrandRank4(tab) {
				this.brandRank4selected = tab;
			},
			handleGameRank3Selected(selectedTab) {
				this.gameRank3selected = selectedTab;
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank33 = this.getRank3Sublist(this.gameHierarchy, "赛事", rank2Cur, selectedTab);
				this.gameRank4 = rank33;
				this.gameRank4selected = "";
				this.queryGameData();
			},
			handleGearRank3Selected(selectedTab) {
				this.gearRank3selected = selectedTab;
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank33 = this.getRank3Sublist(this.gearHierarchy, "装备", rank2Cur, selectedTab);
				this.gearRank4 = rank33;
				this.gearRank4selected = "";
				this.queryGearData();
			},
			handleTeamRank3Selected(selectedTab) {
				this.teamRank3selected = selectedTab;
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank33 = this.getRank3Sublist(this.teamHierarchy, "团体", rank2Cur, selectedTab);
				this.teamRank4 = rank33;
				this.teamRank4selected = "";
				this.queryTeamData();
			},
			handleBrandRank3Selected(selectedTab) {
				this.brandRank3selected = selectedTab;
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank33 = this.getRank3Sublist(this.brandHierarchy, "品牌", rank2Cur, selectedTab);
				this.brandRank4 = rank33;
				this.queryBrandData();
			},

			onClickDetailItem(item) {
				let url = item.link_main;
				// #ifdef APP-PLUS
				plus.runtime.openURL(url);
				// #endif

				// #ifdef H5
				window.open(url, '_blank');
				// #endif
			},

			onClickGearDetailItem(item) {
				const mainUrl = item.link_main || "";
				const jdUrl = item.link_jd || "";
				const taobaoUrl = item.link_taobao || "";

				// Count how many valid URLs we have
				const urls = [mainUrl, jdUrl, taobaoUrl].filter(url => url.length > 0);

				if (urls.length > 1) {
					const itemList = [];
					if (mainUrl) itemList.push('去官网购买');
					if (jdUrl) itemList.push('去京东购买');
					if (taobaoUrl) itemList.push('去淘宝购买');

					uni.showActionSheet({
						itemList,
						success: (res) => {
							let url = '';
							if (mainUrl && res.tapIndex === 0) {
								url = mainUrl;
							} else if (jdUrl && ((mainUrl && res.tapIndex === 1) || (!mainUrl && res
									.tapIndex === 0))) {
								url = jdUrl;
							} else {
								url = taobaoUrl;
							}
							// #ifdef APP-PLUS
							plus.runtime.openURL(url);
							// #endif
							// #ifdef H5
							window.open(url, '_blank');
							// #endif
						}
					});
				}
				// If only one URL exists, navigate directly
				else if (urls.length === 1) {
					const url = mainUrl || jdUrl || taobaoUrl;
					// #ifdef APP-PLUS
					plus.runtime.openURL(url);
					// #endif
					// #ifdef H5
					window.open(url, '_blank');
					// #endif
				}
			},

			onClickTeamDetailItem(item) {
				let url = item.link_main;
				// #ifdef APP-PLUS
				plus.runtime.openURL(url);
				// #endif

				// #ifdef H5
				window.open(url, '_blank');
				// #endif
			},

			onClickBrandDetailItem(item) {
				let url = item.link_main;
				// #ifdef APP-PLUS
				plus.runtime.openURL(url);
				// #endif

				// #ifdef H5
				window.open(url, '_blank');
				// #endif
			},

			queryArticleList() {
				let sportType = "铁人三项";
				uni.request({
					url: 'https://datie123.com/entry/getEntryList',
					method: 'GET',
					data: {
						sport_type: sportType,
						rank1: "文章",
					}
				}).then((result) => {
					if (result.statusCode === 200) {
						// 成功处理
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.articleList = resList;
					}
				});
			},

			queryGameData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.gameRank2[this.gameRank2Index];
				let rank3Cur = this.gameRank3selected || "";
				let rank4Cur = this.gameRank4selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "赛事",
							rank2: rank2Cur,
							rank3: rank3Cur,
							rank4: rank4Cur,
							order_type: '1',
							entry_id: lastEntryId // Add entry_id parameter for pagination
						}
					});
				};
				uni.showLoading({
					title: '加载中...',
					mask: true
				});
				fetchPage().then((result) => {
					uni.hideLoading();
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.gameList = resList;
					}
				}).catch(() => {
					uni.hideLoading();
				});
			},

			queryGearData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.gearRank2[this.gearRank2Index];
				let rank3Cur = this.gearRank3selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "装备",
							rank2: rank2Cur,
							rank3: rank3Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				uni.showLoading({
					title: '加载中...',
					mask: true
				});
				fetchPage().then((result) => {
					uni.hideLoading();
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.gearList = resList;
					}
				}).catch(() => {
					uni.hideLoading();
				});
			},

			queryTeamData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.teamRank2[this.teamRank2Index];
				let rank3Cur = this.teamRank3selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "团体",
							rank2: rank2Cur,
							rank3: rank3Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				// First page request
				fetchPage().then((result) => {
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.teamList = resList;
					}
				});
			},

			queryTeamDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "团体"
					}
				}).then((result) => {
					// 成功处理
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.teamHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "团体");
						this.teamRank2 = Object.keys(rank2);
						let rank2Cur = this.teamRank2[this.teamRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "团体", rank2Cur);
							this.teamRank3 = Object.keys(rank22);
							if (this.teamRank3.length > 0) {
								let rank3Cur = this.teamRank3[0];
								this.teamRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "团体", rank2Cur, rank3Cur);
									this.teamRank4 = rank33;
								}
							}
						}
						this.queryTeamData();
					}
				});
			},
			queryGearDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "装备"
					}
				}).then((result) => {
					// 成功处理					
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.gearHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "装备");
						this.gearRank2 = Object.keys(rank2);
						let rank2Cur = this.gearRank2[this.gearRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "装备", rank2Cur);
							this.gearRank3 = Object.keys(rank22);
							if (this.gearRank3.length > 0) {
								let rank3Cur = this.gearRank3[0];
								this.gearRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "装备", rank2Cur, rank3Cur);
									this.gearRank4 = rank33;
								}
							}
						}
						this.queryGearData();
					}
				});
			},

			queryDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "赛事"
					}
				}).then((result) => {
					// 成功处理
					let resList = [];
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.gameHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "赛事");
						this.gameRank2 = Object.keys(rank2);
						let rank2Cur = this.gameRank2[this.gameRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "赛事", rank2Cur);
							this.gameRank3 = Object.keys(rank22);
							if (this.gameRank3.length > 0) {
								let rank3Cur = this.gameRank3[0];
								this.gameRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "赛事", rank2Cur, rank3Cur);
									this.gameRank4 = rank33;
								}
							}
						}
						this.queryGameData();
					}
				});
			},

			buildHierarchy(data) {
				const hierarchy = {};
				data.forEach(item => {
					// 初始化 rank1
					if (!hierarchy[item.rank1]) {
						hierarchy[item.rank1] = {};
					}
					// 检查 rank2 是否存在，如果存在则继续
					if (item.rank2 !== undefined) {
						// 初始化 rank2
						if (!hierarchy[item.rank1][item.rank2]) {
							hierarchy[item.rank1][item.rank2] = {};
						}

						// 检查 rank3 是否存在，如果存在则继续
						if (item.rank3 !== undefined) {
							// 初始化 rank3
							if (!hierarchy[item.rank1][item.rank2][item.rank3]) {
								hierarchy[item.rank1][item.rank2][item.rank3] = [];
							}

							// 检查 rank4 是否存在，如果存在则添加到 rank3 对应的数组中
							if (item.rank4 !== undefined) {
								hierarchy[item.rank1][item.rank2][item.rank3].push(item.rank4);
							}
						}
					}
				});
				return hierarchy;
			},

			getRank1Sublist(hierarchy, rank1Key) {
				return hierarchy[rank1Key] || {};
			},

			getRank2Sublist(hierarchy, rank1Key, rank2Key) {
				return hierarchy[rank1Key] && hierarchy[rank1Key][rank2Key] || [];
			},

			getRank3Sublist(hierarchy, rank1Key, rank2Key, rank3Key) {
				return hierarchy[rank1Key] && hierarchy[rank1Key][rank2Key] && hierarchy[rank1Key][rank2Key][rank3Key] ||
				[];
			},

			openBeianLink() {
				// #ifdef APP-PLUS
				plus.runtime.openURL('https://beian.miit.gov.cn/');
				// #endif

				// #ifdef H5
				window.open('https://beian.miit.gov.cn/', '_blank');
				// #endif
			},

			scrollToSection(sectionId) {
				// Close drawer first
				this.closeDrawer();

				// Use dom module to scroll to element
				// #ifdef APP-PLUS-NVUE
				const dom = weex.requireModule('dom');
				const el = this.$refs[sectionId];
				if (el) {
					dom.scrollToElement(el, {
						offset: 0,
						animated: true
					});
				}
				// #endif

				// For H5 platform
				// #ifdef H5
				const element = document.getElementById(sectionId);
				if (element) {
					element.scrollIntoView({
						behavior: 'smooth',
						block: 'start'
					});
				}
				// #endif
			},

			queryBrandData() {
				let sportType = this.array[this.typeIndex].type;
				let rank2Cur = this.brandRank2[this.brandRank2Index];
				let rank3Cur = this.brandRank3selected || "";
				const fetchPage = (lastEntryId = '') => {
					return uni.request({
						url: 'https://datie123.com/entry/getEntryList',
						method: 'GET',
						data: {
							sport_type: sportType,
							rank1: "品牌",
							rank2: rank2Cur,
							rank3: rank3Cur,
							order_type: '1',
							entry_id: lastEntryId
						}
					});
				};
				fetchPage().then((result) => {
					console.log("QQQ", result);
					if (result.statusCode === 200) {
						let resList = [];
						let json = result.data;
						if (json.code == 0) {
							let res = json.entry_list;
							for (let obj of res) {
								let entry = EntryModel.fromJSON(obj);
								resList.push(entry);
							}
						}
						this.brandList = resList;
					}
				});
			},

			queryBrandDicList() {
				uni.request({
					url: 'https://datie123.com/entry/getRankList',
					method: 'GET',
					data: {
						rank1: "品牌"
					}
				}).then((result) => {
					let json = result.data;
					if (json.code == 0) {
						let res = json.rank_list;
						let treeRes = this.buildHierarchy(res);
						this.brandHierarchy = treeRes;
						let rank2 = this.getRank1Sublist(treeRes, "品牌");
						this.brandRank2 = Object.keys(rank2);
						let rank2Cur = this.brandRank2[this.brandRank2Index];
						if (rank2Cur != undefined) {
							let rank22 = this.getRank2Sublist(treeRes, "品牌", rank2Cur);
							this.brandRank3 = Object.keys(rank22);
							if (this.brandRank3.length > 0) {
								let rank3Cur = this.brandRank3[0];
								this.brandRank3selected = rank3Cur;
								if (rank3Cur != undefined) {
									let rank33 = this.getRank3Sublist(treeRes, "品牌", rank2Cur, rank3Cur);
									this.brandRank4 = rank33;
								}
							}
						}
						this.queryBrandData();
					}
				});
			},
		}
	}
</script>

<style lang="scss">
	$nav-height: 30px;

	.box-bg {
		background-color: #F5F5F5;
		padding: 5px 0;
	}

	.drawer-text {
		margin-left: 6px;
	}

	.tag-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-left: 10px;
	}

	.grid-item-title {
		font-size: 12px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
	}

	.grid-item-sub-title {
		font-size: 10px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
	}

	.tag-sub-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-right: 5px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.drawer-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-left: 16px;
		margin-bottom: 16px;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.section-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-top: 6px;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.section-title-space {
		display: flex;
		// flex-grow: 1;
		flex: 1;
	}

	.home-icon-bg {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		height: 100%;
		// width: 160rpx;
		// margin-left: 4px;
	}

	.text-h1 {
		font-size: 16px;
		font-weight: bold;
		color: black;
	}

	.text-h2 {
		font-size: 15px;
		font-weight: bold;
		color: black;
	}

	.navi-left-image {
		height: 36px;
		width: 36px;
	}

	.city {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
	}
	
	.cell-card {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
	}

	.tag-container {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.section-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 20px;
		height: 20px;
	}

	.section-image-drop-down {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 28px;
		height: 30px;
	}

	.padding-left {
		padding-left: 8px;
	}

	.hr-line {
		height: 1px;
		/* 线的高 */
		background-color: #e5e5e5;
		/* 线的颜色 */
		border: none;
		/* 去除边框 */
		margin: 4px 0;
		/* 上下外边距 */
	}

	.drawer-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		width: 60%;
		// background-color: #ff0000;
	}

	.input-view {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		// width: 100%;
		flex-direction: row-reverse;
		// background-color: #ff0000;
		height: 90%;
		flex-wrap: nowrap;
	}

	.beian-container {
		padding: 10px;
		text-align: center;
		font-size: 14px;
		color: #999;
	}

	.beian-text {
		margin-right: 8px;
	}

	.beian-link {
		color: #999;
		text-decoration: none;
		/* 取消下划线 */
	}
</style>