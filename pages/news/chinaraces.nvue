<template>
    <view class="box-bg">
        <uni-nav-bar statusBar shadow :border="false" fixed>
            <!-- <template v-slot:left>
                <view class="row_style" @click="goHome">
                    <image class="navi-left-image home-icon" src="/static/home.svg" mode="aspectFit"
                    />
                </view>
            </template> -->
            <view class="home-icon-bg">
                <image class="input-view" src="/static/racesbar.png" mode="aspectFit"
                />
            </view>
            <!-- <template v-slot:left>
                <button class="share-button" @click="handleShare" >
                    <image class="navi-left-image home-icon" src="/static/ironcat.jpg" mode="aspectFit">
                    </image>		
                </button>
            </template> -->
        </uni-nav-bar>
		<scroll-view class="content-scroll" scroll-y enable-pull-down-refresh 
		@refresherrefresh="handlePullDownRefresh" :style="{ minHeight: '100px' }" enable-flex>
			<div class="filter-row" :style="{top: navBarHeight + 'px'}" >
				<view class="filter-item" :class="getFilterClass('Region')">
					<picker mode="selector" :range="regions" @change="selectOptionRegion">
						  <view class="picker-text rounded-corners" :class="{'selected': selectedRegion}">{{ selectedRegion || '主办方' }}</view>
					</picker>
				</view>
			
				<!-- Status Picker -->
				<view class="filter-item" :class="getFilterClass('Status')">
					<picker mode="selector" :range="statuses" @change="selectOptionStatus">
						  <view class="picker-text rounded-corners">{{ selectedStatus || '赛事状态' }}</view>
						</picker>
				</view>
			
				<!-- Month Picker -->
				<view class="filter-item" :class="getFilterClass('Month')">
					<picker mode="selector" :range="months" @change="selectOptionMonth">
						  <view class="picker-text rounded-corners">{{ selectedMonth || '赛事月份' }}</view>
						</picker>
				</view>
			
				<!-- Distance Picker -->
				<view class="filter-item" :class="getFilterClass('Distance')">
					<picker mode="selector" :range="distances" @change="selectOptionDistance">
						  <view class="picker-text rounded-corners">{{ selectedDistance || '赛事距离' }}</view>
						</picker>
				</view>	
			</div>
		<div class="races-container">
		  <div v-for="(race, index) in filterRaces" :key="index" class="race-item"
		       :style="{ backgroundImage: `url(${race.bk_image})`, backgroundSize: 'cover', backgroundPosition: 'center' }"
		       >
		    <!-- 遮罩层 -->
		    <div class="overlay"></div>
		
		    <!-- 内容 -->
		    <div class="content">
		      <div class="main-title-container">
				  <div class="title">
				      <span class="text">{{ race.title }}</span>
				  </div>
				   <img 
				          :src="race.isNotFavorited ? '/static/通知-已订阅.svg' : '/static/通知-未订阅.svg'" 
				          alt="收藏图标" 
				          class="favorites-icon" 
				          @click="checkAuthorization(race)" 
				          draggable="false"
				      />
				</div>	
			  <div class="title-container">
				  <div class="title-container-right" v-if=race.icon>
					  <div class="img-icon" >
					  <img :src="race.icon" alt="icon" class="race-icon" draggable="false"/>
					  </div>
				  </div>
				  <div class="title-container-left">
					  <div class="title-container-left-detail">
						  <img src="/static/地点.svg" alt="位置图标" class="location-icon" draggable="false"/>
						  <div class="title2">{{ race.area }}</div>
					  </div>
					  <div class="title-container-left-detail">
					  		<img src="/static/route-fill.svg" alt="位置图标" class="location-icon" draggable="false"/>
					  		<div class="title2">{{ race.race_distance }}</div>			  
					  </div>			  
				  </div>
				  
				  
			  </div>
		      <div class="race-details">
				  <div class="race-details-left">
		            <div class="bottom-row-text">
		              {{ race.race_date ? race.race_date : '敬请期待' }}
		            </div>
		            <div class="bottom-row-text2">
		              {{ race.race_status }}
		            </div>
					<div class="bottom-row-text3" v-if="race.race_level !== null && race.race_level !== ''">
					  {{ race.race_level }}
					</div>
					</div>
					<div class="race-details-right" v-if="race.link_main !== null && race.link_main !== ''">
					<div class="bottom-row-text4" @click="openRaceLink(race)" >
					  查看详情
					</div>
					</div>
		          </div>				
	
		    </div>
		  </div>
		</div>	
		</scroll-view>
		<official-account></official-account>
		<!-- <view class="beian-container">
			<text class="beian-text" @click="openBeianLink">苏ICP备2022016640号-3</text>
		</view> -->
	</view>
</template>

<script >
export default {
	
	data() {
		return {
		  navBarHeight:64,
		  regions: [], // 主办方
		  statuses: [], // 赛事状态
		  months: this.generateMonths(),
		  distances: ['全部','25.75km','51.5km','100km','113km','226km','其他距离'] ,// 距离
		
		  selectedRegion: '', // 保存选中的主办方
		  selectedStatus: '', // 保存选中的赛事状态
		  selectedMonth: '', // 保存选中的月份
		  selectedDistance: '' ,// 保存选中的距离
		   
		  races: [] ,// 存储赛事数据，
		  filterRaces: [] ,// 存储过滤后的赛事数据，
		  
		  wxAppId: "",//微信小程序appid
		  wxSecretKey: "",//微信小程序密钥
		  
		  isWeChat: false, // 标记是否为微信环境
		  // 微信分享的配置
		  appId: "",        // 从后端获取的 appId
		  timestamp: "",    // 从后端获取的 timestamp
		  nonceStr: "",     // 从后端获取的 nonceStr
		  signature: "",    // 从后端获取的 signature
		  shareTitle: "打铁123",
		  shareDesc: "打铁从这里开始",
		  shareLink: "https://www.datie123.com",
		  // shareImage: "https://www.datie123.com/share-image.jpg"
		  
		  loading: false, // 加载状态
		  isWeChatEnvironment: false, // 初始状态，默认不是微信环境
		  
		  showPickerRegion: false,
		  showPickerStatus: false,
		  showPickerMonth: false,
		  showPickerDistance: false,
		  
		  openid: '', // 初始化为空
		  unionid: '' ,// 初始化为空
		  
		  tmplIds: ['ycORe8--kFzEp5K2Ty2XJgYzIC7Kml1wuaNcLmU6TCo', 'OhoznUD4OfUo-CYjS1hMQ4ECDymyVK8l25JZnAhB9QE', '1oejuHtf353pPTUblhoqfToXl8d1wN2o60eVuLqMsE8'],
		  acceptedTmplIds: [], // 用于存储用户同意的模板消息ID
		};
	  },
	  onPullDownRefresh() {
	      console.log('页面级下拉刷新被触发');
	      this.handlePullDownRefresh();
	    },
	methods: {
		togglePicker(type) {
		    if (type === 'Region') {
		      this.showPickerRegion = !this.showPickerRegion;
		    }
		    // 可以添加其他的picker控制
		  },
		// 切换下拉菜单显示/隐藏
		      toggleDropdown(type) {
		        switch (type) {
		          case 'Region':
		            this.showPickerRegion = !this.showPickerRegion;
		            this.showPickerStatus = false;
		            this.showPickerMonth = false;
		            this.showPickerDistance = false;
		            break;
		          case 'Status':
		            this.showPickerStatus = !this.showPickerStatus;
		            this.showPickerRegion = false;
		            this.showPickerMonth = false;
		            this.showPickerDistance = false;
		            break;
		          case 'Month':
		            this.showPickerMonth = !this.showPickerMonth;
		            this.showPickerRegion = false;
		            this.showPickerStatus = false;
		            this.showPickerDistance = false;
		            break;
		          case 'Distance':
		            this.showPickerDistance = !this.showPickerDistance;
		            this.showPickerRegion = false;
		            this.showPickerStatus = false;
		            this.showPickerMonth = false;
		            break;
		        }
		      },
			  hideDropdown(type) {
			      if (type === 'Region') {
			        this.showPickerRegion = false;
			      } else if (type === 'Status') {
			        this.showPickerStatus = false;
			      } else if (type === 'Month') {
			        this.showPickerMonth = false;
			      } else if (type === 'Distance') {
			        this.showPickerDistance = false;
			      }
			    },
			    keepDropdown(type) {
			      if (type === 'Region') {
			        this.showPickerRegion = true;
			      } else if (type === 'Status') {
			        this.showPickerStatus = true;
			      } else if (type === 'Month') {
			        this.showPickerMonth = true;
			      } else if (type === 'Distance') {
			        this.showPickerDistance = true;
			      }
			    },
		
		selectOptionRegion(e) {
		  const index = e.detail.value;  
		  this.selectedRegion = this.regions[index];
		  
		  this.selectedRegionIndex = index;
		  if (this.selectedRegion === '全部') {
			  this.selectedRegion = ''; // 选择“全部”时，清空选中值，显示默认文本
			  this.selectedRegionIndex =0;
		  } 
		  this.fetchRaceData();
		},
		selectOptionStatus(e) {
		  const index = e.detail.value;
		  this.selectedStatus = this.statuses[index];
		  this.selectedStatusIndex = index;
		  if (this.selectedStatus === '全部') {
			  this.selectedStatus = ''; // 选择“全部”时，清空选中值，显示默认文本
			  this.selectedStatusIndex =0;
		  } 
		  this.fetchRaceData();
		},
		selectOptionMonth(e) {
		  const index = e.detail.value;
		  this.selectedMonth = this.months[index];
		  this.selectedMonthIndex = index;
		  if (this.selectedMonth === '全部') {
						  this.selectedMonth = ''; // 选择“全部”时，清空选中值，显示默认文本
						  this.selectedMonthIndex =0;
		  } 
		  this.fetchRaceData();
		},
		selectOptionDistance(e) {
		  const index = e.detail.value;
		  this.selectedDistance = this.distances[index];
		  this.selectedDistanceIndex = index;
		  if (this.selectedDistance === '全部') {
						  this.selectedDistance = ''; // 选择“全部”时，清空选中值，显示默认文本
						  this.selectedDistanceIndex =0;
		  } 
		  this.fetchRaceData();
		},
		handlePullDownRefresh() {
		      try {
		        // 模拟异步请求
		        this.fetchRaceData();
				uni.stopPullDownRefresh();
				uni.showToast({
				  title: '刷新成功',  
				  icon: 'success'
				});
			  }catch (error) {
		        console.error('刷新时发生错误:', error);
				uni.stopPullDownRefresh();
		        uni.showToast({
		          title: '刷新失败',
		          icon: 'none'
		        });		        
		      }
			  finally{
				  uni.stopPullDownRefresh();
			  }
		    },
	    generateMonths() {
			const months = ['全部'];
			const now = new Date(); // 获取当前日期
	  
			for (let i = 0; i < 12; i++) {
			  const date = new Date(now.getFullYear(), now.getMonth() + i, 1); // 创建新日期对象
			  const year = date.getFullYear();
			  const month = String(date.getMonth() + 1).padStart(2, '0'); // 获取月份并确保两位数
			  months.push(`${year}-${month}`); // 格式化为 "YYYY 年 MM 月"
			}
  
			return months;
		},
		openBeianLink() {
		  const beianUrl = 'https://beian.miit.gov.cn/';
		  // #ifdef APP-PLUS
		  plus.runtime.openURL(beianUrl);
		  // #endif

		  // #ifdef H5
		  window.location.href = beianUrl;
		  // #endif
		},
		goHome() {
		  // 根据你的路由配置调整此方法
		  this.$router.push({ path: '/' }); // 或者使用其他方式导航到首页
		},
		openBeianLink() {
		  const beianUrl = 'https://beian.miit.gov.cn/';
		  // #ifdef APP-PLUS
		  plus.runtime.openURL(beianUrl);
		  // #endif
		
		  // #ifdef H5
		  window.location.href = beianUrl;
		  // #endif
		},
		fetchRaceData() {
			// 根据筛选条件过滤races，并将“全部”视为未设置筛选条件
			this.filterRaces = this.races.filter(race => {
				// console.error(race)
				return (this.selectedRegion === "" || race.brand.includes(this.selectedRegion)) &&
					   (this.selectedStatus === "" || race.race_status === this.selectedStatus) &&
					   (this.selectedMonth === "" || race.race_date.includes(this.selectedMonth)) &&
					   (this.selectedDistance === "" || race.race_distance.includes(this.selectedDistance));
			});
	//       uni.request({
	//         url: 'https://www.datie123.com/entry/getRaces', // API URL
	//         method: 'GET',
	// 		data: {
				
	// 				area: this.selectedRegion,
	// 				race_status: this.selectedStatus,
	// 				month: this.selectedMonth,
	// 				rank4: this.selectedDistance,
	
	// 		},
	//         success: (res) => {
	//           if (res.statusCode === 200 && res.data) {
	//             const { areas, race_statuses, monthes, ranks4 ,races} = res.data;
	// 			this.races = races; // 保存赛事信息	
	//           } else {
	//             console.error('API request failed:', res);
	//           }
	//         },
	//         fail: (err) => {
	//           console.error('Failed to fetch race data:', err);
	//         }
	//       });
	    },
		fetchRaceDatanit() {
		  uni.request({
			url: 'https://www.datie123.com/entry/getRaces', // API URL
			method: 'GET',
			data: {
				area: this.selectedRegion,
				// race_status: '报名中',
				month: this.selectedMonth,
				rank4: this.selectedDistance,
			},
			success: (res) => {
			  if (res.statusCode === 200 && res.data) {
				const { areas, race_statuses, monthes, ranks4,races } = res.data;
				this.races = races; // 保存赛事信息
				this.filterRaces=races;//
				// 更新组件的状态
				this.regions = ['全部', ...areas];
				this.statuses = ['全部', ...race_statuses];
				this.checkAuthorizationInit();
			  } else {
				console.error('API request failed:', res);
			  }
			},
			fail: (err) => {
			  console.error('Failed to fetch race data:', err);
			}
		  });
		},
		loadWeChatSDK() {
			if(this.isWeChatEnvironment){
				const script = document.createElement('script');
							script.src = 'https://res.wx.qq.com/open/js/jweixin-1.6.0.js';
							script.onload = () => {
								if (typeof wx !== 'undefined') {
									// callback();
									// console.error(typeof wx);
								} else {
									console.error('微信JS-SDK加载失败');
								}
							};
							document.head.appendChild(script);
							// 获取当前网页的URL，不包含#及其后面部分
							const url1 = encodeURIComponent(window.location.href.split('#')[0]);
							// const url = 'https://www.datie123.com';
							// console.error('当前 URL:', url1);
							// 调用后端API获取签名等信息
							uni.request({
								url: 'https://www.datie123.com/entry/getShareConfig?url=' + url1, // 替换为你的后端API地址
								method: 'GET',
								success: (res) => {
								if (res.statusCode === 200 && res.data) {
								this.configData = res.data;
								
								this.initWeChatSDK();
								} else {
								console.error('获取微信JS-SDK配置失败:', res);
							  }
							},
							fail: (error) => {
							  console.error('请求微信JS-SDK配置失败:', error);
							}
				});
			}	
		},
		initWeChatSDK() {		
			// console.error('获取到的配置数据:', this.configData);
			// console.error('获取到的配置数据:', JSON.stringify(this.configData, null, 2));
			  wx.config({
				debug: false, // 开启调试模式
				appId: this.configData.appId, // 必填，公众号的唯一标识
				timestamp: this.configData.timestamp, // 必填，生成签名的时间戳
				nonceStr: this.configData.nonceStr, // 必填，生成签名的随机串
				signature: this.configData.signature, // 必填，签名
				jsApiList: ['updateAppMessageShareData', 'updateTimelineShareData'] // 必填，需要使用的JS接口列表
			  });	
			wx.ready(() => {
			  // console.log('微信JS-SDK加载成功');
			  this.initWeChatShare();
			});  
			wx.error((res) => {
			  console.error('微信 JS SDK 配置失败:', res);		  
			});
		},
		initWeChatShare() {
		  const shareData = {
			title: '2025国内铁三赛事', // 分享标题
			desc: '提供最新国内铁人三项赛事信息', // 分享描述
			link: 'https://www.datie123.com/#/pages/news/chinaraces', // 分享链接
			imgUrl: 'https://www.datie123.com/images/share.jpg', // 分享图标		
		  };		
			  wx.updateAppMessageShareData({
				...shareData,
				success: () => {
				  console.log('设置给朋友分享的数据成功');
				},
				fail: (err) => {
				  console.error('设置给朋友分享的数据失败:', err);
				}
			  });
			
			  // 设置朋友圈分享的数据
			  wx.updateTimelineShareData({
				...shareData,
				success: () => {
				  console.log('设置朋友圈分享的数据成功');
				},
				fail: (err) => {
				  console.error('设置朋友圈分享的数据失败:', err);
				}
			  });
	    },
		handleShare() {
			// const url = `https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzU4NDgxNTY1MA==#wechat_redirect`;
			// const ua = navigator.userAgent.toLowerCase();
			this.addSingleStaticsDetailShare();
			// 小程序跳转到公众号
			  if (typeof wx !== 'undefined' && wx.openUrl) {
			    wx.openUrl({
			      url: 'https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzU4NDgxNTY1MA==&scene=110#wechat_redirect',
			      success: function (res) {
			        console.log('跳转成功');
			      },
			      fail: function (err) {
			        console.error('跳转失败', err);
			      }
			    });
			  } else {
			    console.error('wx.openUrl 不支持或未在小程序环境中');
			  }
			// this.isWeChat = /micromessenger/.test(ua);
			// if (this.isWeChat) {
			//window.location.href = 'https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzU4NDgxNTY1MA==&scene=110#wechat_redirect';
				  // this.loadWeChatSDK();	
					// window.open(url, '_blank');
			// this.openUrlWithPlus(url);
					  
			// }
		//    else {
			// 普通浏览器环境下使用浏览器自带分享或分享链接
			
			// if (navigator.share) {
			// 	// console.error("123");
			//     navigator.share({
			// 		title: '2025国内铁三赛事',
			// 		text: '提供最新国内铁人三项赛事信息',
			// 		url: 'https://www.datie123.com/#/pages/news/chinaraces'
			// 	}).then(() => console.log('分享成功'))
			// 		.catch(console.error);
			// } else {
			//   // 如果浏览器不支持分享API，提供一个简单的分享链接
			//   window.location.href = `https://www.datie123.com`;
			// }
		  // }
		},
		openUrlWithPlus(url) {
		    setTimeout(() => {
		      if (typeof plus !== 'undefined' && plus.runtime) {
		        plus.runtime.openURL(url);
		      } else {
		        console.warn('plus 还未定义，回退到 window.location.href');
		        window.location.href = url;
		      }
		    }, 0);
		  },
		openRaceLink(race) {
			this.addSingleStaticsDetail(race);
			
		}, 
		 checkWeChatEnvironment() {
		       // const userAgent = navigator.userAgent.toLowerCase();
		       // this.isWeChatEnvironment = /micromessenger/.test(userAgent);
		     },
			 
		 async addSingleStaticsDetail(item) {
		   const currentTime = new Date().toLocaleString();
		   // 获取设备信息
		   const systemInfo = uni.getSystemInfoSync();
		   
		   // 获取设备型号
		   const deviceModel = systemInfo.model;
		   
		   // console.log('设备型号：', deviceModel);
		   let detailInfo = {
		     entry_id: item.entry_id,
		     element_id: '赛事详情',
		     click_time: currentTime,
			 user_id:'',
			 page_id:'2025国内铁人三项赛事',
			 openid:wx.getStorageSync('openid'),
			 unionid:wx.getStorageSync('unionid'),
			 device_id:deviceModel,
			 ip:'',
			 channel:'微信小程序'
			 }
		 
		   try {
		     const result = await uni.request({
		       url: 'https://www.datie123.com/entry/addSingleStaticsDetail',
		       method: 'POST',
		       data: {
		         statics_detail: detailInfo,
		       }
		     });
		     // console.log("请求结果", result);
		   } catch (error) {
		     console.error("请求失败", error);
		   }
		 
		   const url = item.link_main;
		   switch (process.env.UNI_PLATFORM) {
		     case 'app-plus':
		       console.log('当前环境是 App');
		       plus.runtime.openURL(url);
		       break;
		     case 'h5':
		       console.log('当前环境是 H5');
		       window.location.href = url;
		       break;
		     case 'mp-weixin':
		       console.log('当前环境是微信小程序');
		       uni.navigateTo({url: '/pages/news/detail?query=' + encodeURIComponent(url)});
		       break;
		     default:
		       console.log('未知环境');
		       uni.navigateTo({
		         url: '/pages/news/chinaraces'
		       });
		       break;
		   }
		 },

		 addSingleStaticsDetailShare() {
			 
		 			const currentTime = new Date().toLocaleString();
		 			let detailInfo = {
		 				// entry_id: item.entry_id,
		 				element_id: '跳转ironcat',
		 				click_time: currentTime
		 			}
		 			uni.request({
		 				url: 'https://www.datie123.com/entry/addSingleStaticsDetail',
		 				method: 'POST',
		 				data: {
		 					statics_detail: detailInfo,
		 				}
		 			}).then((result) => {
		 				// console.log("EEEE", result);
		 			});
		 },
		 addSingleStaticsDetailInit() {
		 			const currentTime =new Date();
					// 获取设备信息
					const systemInfo = uni.getSystemInfoSync();				
					// 获取设备型号
					const deviceModel = systemInfo.model;
		 			let detailInfo = {
		 				page_id: '2025国内铁人三项赛事',
		 				click_time: currentTime.toLocaleString(),
						// entry_id: item.entry_id,
						// element_id: '赛事详情',
						user_id:'',
						openid:wx.getStorageSync('openid'),
						unionid:wx.getStorageSync('unionid'),
						device_id:deviceModel,
						ip:'',
						channel:'微信小程序'
		 			}
		 			uni.request({
		 				url: 'https://www.datie123.com/entry/addSingleStaticsDetail',
		 				method: 'POST',
		 				data: {
		 					statics_detail: detailInfo,
		 				}
		 			}).then((result) => {
		 				// console.log("EEEE", result);
		 			});
		 },
		 getFilterClass(type) {
		 		     let selectedOption = this[`selected${type}`];
		 		     if (!selectedOption || selectedOption === '全部') {
		 		       return 'all-selected';  // 选择“全部”或未选择时使用灰色背景
		 		     } else {
		 		       return 'selected';  // 已选择项时使用白色背景，红色边框
		 		     }
		 		   },
		 calculateNavBarHeight() {
		       // 获取系统信息
		       uni.getSystemInfo({
		           success: (e) => {
		               const statusBarHeight = e.statusBarHeight; // 状态栏高度
		               let navigationBarHeight = 0;
		       
		               // 根据平台设置默认导航栏高度
		               if (e.platform === 'android') {
		                   navigationBarHeight = 48; // iOS 默认导航栏高度
		               } else {
		                   navigationBarHeight = 44; // Android 默认导航栏高度
		               }
		               this.navBarHeight = statusBarHeight + navigationBarHeight;
		           }
		       });
		     },
			 checkAuthorization(race) {
				 const that = this;
				 // 尝试从本地缓存中获取 openid 和 unionid
				 const openid = wx.getStorageSync('openid');
				 const unionid = wx.getStorageSync('unionid');
				 const status = race.isNotFavorited ? 0 : 1; // 订阅为1，取消订阅为0
				 if (unionid) {
					 //保存订阅信息
					 that.saveUserInfo(openid, unionid,race.entry_id,status,race);
				 } else {
				   console.error('本地缓存无信息');
				   uni.getSetting({
						   success(res) {
							   if (res.authSetting['scope.userInfo']) {
								   //用户已授权，可以调用微信登录获取 openid 和 unionid
								   wx.login({
									   success(resLogin) {
										   if (resLogin.code) {
											   that.getWechatOpenid(resLogin.code);
										   } else {
											   console.error('登录失败！' + resLogin.errMsg);
										   }
									   }
								   });
								  
							   } else {
								   // 未授权，调用微信授权
								   that.authorizeWechat(race);
							   }
						   }
						});
				   }
			   },
			   checkAuthorizationInit() {
				 const that = this;
				 // 尝试从本地缓存中获取 openid 和 unionid
				 const openid = wx.getStorageSync('openid');
				 const unionid = wx.getStorageSync('unionid');	 
				 if (unionid) {
					 // 如果本地缓存中有 openid 和 unionid，则直接使用
					 // console.error('从本地缓存读取的 OpenID:', openid);
					 // console.error('从本地缓存读取的 UnionID:', unionid);
					 that.getDingyueInfoInit(openid, unionid);
					 this.saveUserProfilesInfo(openid, unionid);
				 } else {
					console.error('本地缓存无信息');
					uni.getSetting({
						   success(res) {
							   if (res.authSetting['scope.userInfo']) {
								   // 用户已授权，调用微信登录获取 openid 和 unionid
								   console.error('用户已授权，调用微信登录获取 openid 和 unionid')
									   wx.login({
										   success(resLogin) {
											   if (resLogin.code) {
												   // console.error(resLogin.code)
												   that.getWechatOpenidInit(resLogin.code);
												   
											   } else {
												   console.error('登录失败！' + resLogin.errMsg);
											   }
										   }
									   });						   
							   } else {
								   // 未授权，调用微信授权
								   // that.authorizeWechat(race);
							   }
							}
						});
					}
			     },
			   getDingyueInfo(){
				   console.error('调用getDingyueInfo')
				   console.error(wx.getStorageSync('openid'));
				   uni.request({
					 url: 'https://www.datie123.com/entry/queryByOpenidAndUnionId', // API URL
					 method: 'GET',
						data: {
							openid: wx.getStorageSync('openid'),
							unionid: wx.getStorageSync('unionid'),	
							channel: 'wx-app',
						},
					 success: (res) => {
					   if (res.statusCode === 200 && res.data) {						
						 // 假设 res.data 是一个包含 entry_id 的数组
						 const favoritedEntryIds = res.data.map(item => item.entry_id);
						  // 初始化 races 中的 isFavorited 属性
						 const updatedFilterRaces = this.filterRaces.map(race => {
							 return {
								 ...race,
								 isNotFavorited: favoritedEntryIds.includes(race.entry_id)
							 };
						 });
						const updatedRaces = this.races.map(race => {
								 return {
									 ...race,
									 isNotFavorited: favoritedEntryIds.includes(race.entry_id)
								 };
						});
						 this.filterRaces=updatedFilterRaces;
						 this.races=updatedRaces;
					   } else {
						 console.error('API request failed:', res);
					   }
					 },
					 fail: (err) => {
					   console.error('Failed to fetch race data:', err);
					 }
				   });
			   },
			   getDingyueInfoInit(openid,unionid){
				   // console.info('调用getDingyueInfoInit')
				   uni.request({
					 url: 'https://www.datie123.com/entry/queryByOpenidAndUnionId', // API URL
					 method: 'GET',
						data: {
							openid: openid,
							unionid: unionid,
							channel: 'wx-app',											
						},
					 success: (res) => {
					   if (res.statusCode === 200 && res.data) {						
						 // 假设 res.data 是一个包含 entry_id 的数组
						 const favoritedEntryIds = res.data.map(item => item.entry_id);
							// console.error(favoritedEntryIds)
						  // 初始化 races 中的 isFavorited 属性
						 const updatedRaces = this.races.map(race => {
							 // console.error(race)
							 return {
								 ...race,
								 isNotFavorited: favoritedEntryIds.includes(race.entry_id)
							 };
						 });					 
						 this.races=updatedRaces;
						 this.filterRaces=updatedRaces;
					   } else {
						 console.error('API request failed:', res);
					   }
					 },
					 fail: (err) => {
					   console.error('Failed to fetch race data:', err);
					 }
				   });
			   },
			   saveUserProfilesInfo(openid,unionid){
				   // console.info('调用getDingyueInfoInit')
				   uni.request({
					 url: 'https://www.datie123.com/entry/addOrUpdateUserProfile', // API URL
					 method: 'POST',
					 header: {
					         'Content-Type': 'application/json' // 设置请求头为 application/json
					     },
					data: {
						openid: openid,
						unionid: unionid,
						channel: 'wx-app',											
					},
					 success: (res) => {
					   console.error('保存成功')

					 },
					 fail: (err) => {
					   console.error('Failed to fetch race data:', err);
					 }
				   });
			   },
			   
			   // 微信授权流程
				authorizeWechat(race) {			
					console.error('未授权用户调用authorizeWechat进行微信授权')
					
					uni.showModal({
					        title: '授权提示',
					        content: '需要您授权用户信息以继续操作',
					        confirmText: '确认',
					        success: (res) => {
					          if (res.confirm) {
								  this.loginAndGetInfo();
					            // 显示授权按钮让用户主动点击
					          }else {
							   // 用户拒绝授权
							   uni.showToast({ title: '授权已取消', icon: 'none' });
							 }
					        }
					      });				   
			   },
		   // 
			   // 登录并获取用户信息
			   async loginAndGetInfo() {
				 try {// 这里是引导用户进行微信授权的代码
					   uni.login({
						   provider: 'weixin', // 指定微信登录
						   success: (res) => {
							   if (res.code) {
								   // console.error(res.code)
								   // 获取登录凭证（code）
								   this.getWechatOpenid(res.code);
							   } else {
								   console.log('登录失败！' + res.errMsg);
							   }
						   }
					   });
			   } catch (err) {
				   console.error('操作失败:', err);
				   uni.showToast({ title: '获取失败', icon: 'none' });
				 }
			   },
			   getWechatOpenidInit(code) {			   
				   // console.error('调用getWechatOpenidInit')
				   uni.request({
					   url: 'https://www.datie123.com/entry/getOpenid', // 你的后台接口地址
					   method: 'POST',
					   data: {
						   code: code
					   },
					   success: (res) => {
						   console.error(res.data);
						   if (res.statusCode === 200 && res.data.openid) {
							   console.error('成功获取到 openid ');
							   wx.setStorageSync('openid', res.data.openid);
						   } else {
							   console.error('获取 OpenID 失败！响应:', res.data);
						   }
						   if (res.data.unionid) {
							   console.error('成功获取到 unionid ');
							   wx.setStorageSync('unionid', res.data.unionid);
						   } else {
							   console.log('获取 unionid 失败！');
						   }
						   this.getDingyueInfoInit(wx.getStorageSync('openid'),
									wx.getStorageSync('unionid'));
						   this.saveUserProfilesInfo(wx.getStorageSync('openid'),
									wx.getStorageSync('unionid'));
					   },
					   fail: (err) => {
						   console.error('请求失败:', err);
					   }
				   });
			   },
			   getWechatOpenid(code) {			   				   
				   console.error('调用getWechatOpenid')
				   uni.request({
					   url: 'https://www.datie123.com/entry/getOpenid', // 你的后台接口地址
					   method: 'POST',
					   data: {
						   code: code
					   },
					   success: (res) => {
						   console.error(res.data);
						   if (res.statusCode === 200 && res.data.openid) {
							   console.error('成功获取到 openid ');
							   wx.setStorageSync('openid', res.data.openid);
						   } else {
							   console.error('获取 OpenID 失败！响应:', res.data);
						   }
						   if (res.data.unionid) {
							   console.error('成功获取到 unionid ');
							   wx.setStorageSync('unionid', res.data.unionid);
						   } else {
							   console.log('获取 unionid 失败！');
						   }
						   this.getDingyueInfo();
					   },
					   fail: (err) => {
						   console.error('请求失败:', err);
					   }
				   });
			   },
			   saveUserInfo(openid, unionid,entryid,status,race) {
				   this.saveUserProfilesInfo(openid, unionid);
					   if(status=='1'){
						console.error('当前为添加订阅');
						 wx.requestSubscribeMessage({
						   tmplIds: ['ycORe8--kFzEp5K2Ty2XJgYzIC7Kml1wuaNcLmU6TCo','OhoznUD4OfUo-CYjS1hMQ4ECDymyVK8l25JZnAhB9QE','1oejuHtf353pPTUblhoqfToXl8d1wN2o60eVuLqMsE8'],
						   success: (res) => {
							   console.error('用户选择的结果:', res); 
							   let acceptedTmplIds = [];	   
							       // 遍历所有模板ID并检查用户是否接受订阅
							       for (let tmplId in res) {
							         if (res.hasOwnProperty(tmplId) && res[tmplId] === 'accept') {
							           acceptedTmplIds.push(tmplId);
							         }
							       }
								 const that = this;
							   if (acceptedTmplIds.length > 0) {
								   uni.request({
									   url: 'https://www.datie123.com/entry/updateSubscription', 
									   method: 'GET',
									   data: {
										   openid: openid,
										   unionid: unionid,
										   entry_id: entryid,
										   status: status ,// 1 表示订阅，0 表示取消订阅
										   channel:'wx-app',
										   tmpl_ids:acceptedTmplIds
									   },
									   success: (res) => {
										   if (res.statusCode === 200) {
											   // 更新收藏状态
											   const newStatus = status === 0; // true 表示订阅，false 表示取消订阅
											   // 遍历 filterRaces 和 races 列表，更新对应的 isNotFavorited 状态
											   	this.updateRaceList(entryid, newStatus);				   
											   // 显示对应的提示信息
											   wx.showToast({
												   title: status === 1 ? "订阅成功" : "取消订阅成功",
												   icon: 'success',
												   duration: 2000
											   });
											   } else {
												   console.error('订阅失败:', res);
											   }
									   },
									   fail: (err) => {
										   wx.showToast({
											   title: status === 1 ? "订阅失败" : "取消订阅失败",
											   icon: 'none',
											   duration: 2000
										   });
										}
									});								   
								   // 可以在这里执行一些操作，比如更新数据库中的用户订阅状态
							   } else {
								   uni.showToast({
									   title: '您尚未订阅！如果要重新订阅，请在设置中打开～',
									   duration: 1000,
									   icon: 'none'
								   });
							   }
						   },
						   fail: (err) => {
							   console.error('请求订阅消息失败', err);
							   uni.showToast({
								   title: '请求订阅消息失败，请稍后再试',
								   icon: 'none'
							   });
						   }
						 });
					   }else{
						   console.error('当前为取消订阅') ;
						   uni.request({
							   url: 'https://www.datie123.com/entry/updateSubscription', // 替换成你的服务器地址
							   method: 'GET',
							   data: {
								   openid: openid,
								   unionid: unionid,
								   entry_id: entryid,
								   status: status ,// 1 表示订阅，0 表示取消订阅,
								   channel:'wx-app',
							   },
							   success: (res) => {
								   if (res.statusCode === 200) {
									   // 更新收藏状态
									   const newStatus = status === 0; // true 表示订阅，false 表示取消订阅
									   this.updateRaceList(entryid, newStatus);						   
									   // 显示对应的提示信息
									   wx.showToast({
										   title: status === 1 ? "订阅成功" : "取消订阅成功",
										   icon: 'success',
										   duration: 2000
									   });
									   } else {
										   console.error('订阅失败:', res);
									   }
							   },
							   fail: (err) => {
								   wx.showToast({
									   title: status === 1 ? "订阅失败" : "取消订阅失败",
									   icon: 'none',
									   duration: 2000
								   });
								}
							});	
					   }
					   
					   						   		   
			   },
			   // saveUserInfo(openid, unionid,entryid,status,race) {
					 //   if(status=='1'){
						//    console.log('当前为添加订阅');
						//    this.acceptedTmplIds = []; // 清空之前的结果
						//    this.processNextSubscription(0); // 开始处理第一个模板消息
					 //   }else{
				  //  console.error('当前为取消订阅') ;
					 //   uni.request({
						//    url: 'https://www.datie123.com/entry/updateSubscription', // 替换成你的服务器地址
						//    method: 'GET',
						//    data: {
						// 	   openid: openid,
						// 	   unionid: unionid,
						// 	   entry_id: entryid,
						// 	   status: status // 1 表示订阅，0 表示取消订阅
						//    },
						//    success: (res) => {
						// 	   if (res.statusCode === 200) {
						// 		   // 更新收藏状态
						// 		   const newStatus = status === 0; // true 表示订阅，false 表示取消订阅
						// 		   this.updateRaceList(entryid, newStatus);						   
						// 		   // 显示对应的提示信息
						// 		   wx.showToast({
						// 			   title: status === 1 ? "订阅成功" : "取消订阅成功",
						// 			   icon: 'success',
						// 			   duration: 2000
						// 		   });
						// 		   } else {
						// 			   console.error('订阅失败:', res);
						// 		   }
						//    },
						//    fail: (err) => {
						// 	   wx.showToast({
						// 		   title: status === 1 ? "订阅失败" : "取消订阅失败",
						// 		   icon: 'none',
						// 		   duration: 2000
						// 	   });
						// 	}
						// });	
				  //  }		   					   						   		   
			   // },		   
			       processNextSubscription(index) {
			         if (index >= this.tmplIds.length) {
			           // 所有模板消息已处理完毕，统一调用更新订阅状态的接口
			           this.updateSubscription();
			           return;
			         }
			   
			         let currentTmplId = this.tmplIds[index];
			   
			         wx.requestSubscribeMessage({
			           tmplIds: [currentTmplId],
			           success: (res) => {
			             console.log(`用户选择的结果 (${currentTmplId}):`, res[currentTmplId]);
			             if (res[currentTmplId] === 'accept') {
			               this.acceptedTmplIds.push(currentTmplId);
			             }
			             // 继续处理下一个模板消息
			             this.processNextSubscription(index + 1);
			           },
			           fail: (err) => {
			             console.error('请求订阅消息失败:', err);
			             // 即使失败也继续处理下一个模板消息
			             this.processNextSubscription(index + 1);
			           }
			         });
			       },
			   
			       updateSubscription() {
			         uni.request({
			           url: 'https://www.datie123.com/entry/updateSubscription',
			           method: 'POST', // 使用POST方法传递数据
			           data: {
			             openid: this.openid,
			             unionid: this.unionid,
			             entry_id: this.entryid,
			             status: 1, // 表示订阅
			             channel: 'wx-app',
			             tmpl_ids: this.acceptedTmplIds
			           },
			           success: (response) => {
			             if (response.statusCode === 200) {
			               // 更新收藏状态
			               const newStatus = true; // true 表示订阅，false 表示取消订阅
			               // 遍历 filterRaces 和 races 列表，更新对应的 isNotFavorited 状态
			               this.updateRaceList(this.entryid, newStatus);
			               // 显示对应的提示信息
			               wx.showToast({
			                 title: "订阅成功",
			                 icon: 'success',
			                 duration: 2000
			               });
			             } else {
			               console.error('订阅失败:', response);
			             }
			           },
			           fail: (err) => {
			             wx.showToast({
			               title: "订阅失败",
			               icon: 'none',
			               duration: 2000
			             });
			           }
			         });
			       },
		   updateRaceList(entryId, newStatus) {
			   // console.error('------调用updateRaceList')
				   // 遍历 filterRaces 和 races 列表，更新对应的 isNotFavorited 状态
				   this.filterRaces.forEach(r => {
					   if (r.entry_id === entryId) {
						   r.isNotFavorited = !newStatus; // 注意这里使用 !newStatus 是因为 isNotFavorited 在订阅时应为 false，取消订阅时应为 true
					   }
				   });
				   this.races.forEach(r => {
					   if (r.entry_id === entryId) {
						   r.isNotFavorited = !newStatus;
					   }
				   });
			   },
	},
     onLoad() {
	  // 在组件挂载后调用 fetchRaceData 方法
	  this.calculateNavBarHeight();
	  this.fetchRaceDatanit();	  
	  this.checkWeChatEnvironment();
	  this.loadWeChatSDK();
	  this.addSingleStaticsDetailInit();
	// 显示右上角的转发按钮
	    uni.showShareMenu({
	      withShareTicket: true,
	      menus: ['shareAppMessage', 'shareTimeline']
	    })
	  },
	  onShareAppMessage() {
	    return {
	      title: '2025国内铁三赛事',
	      path: '/pages/news/chinaraces', // 注意替换为你的页面路径
	      imageUrl: 'https://www.datie123.com/images/datie-ironcat.jpg' // 可选
	    }
	  },
	  onShareTimeline() {
	      return {
	        title: '2025国内铁三赛事',
			imageUrl: 'https://www.datie123.com/images/datie-ironcat.jpg' // 可选
	      }
	    }
}
</script>

<style lang="scss">
	$nav-height: 30px;
	
	.loading {
	  position: absolute;
	  left: 50%;
	  top: 10px;
	  transform: translateX(-50%);
	}
	
	.scroll-view {
	  height: 100%;
	  overflow: auto;
	}
	.box-bg {
		background-color: #F5F5F5;
		flex-direction: column;
		display: flex;
	}
	.box-bg2 {
		height: 80px;
		background-color: #F5F5F5;
	}
	
	.drawer-text {
		margin-left: 6px;
	}
	
	.tag-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-left: 10px;
	}
	
	.grid-item-title {
		font-size: 12px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
	}
	
	.grid-item-title-brand {
		width: 60px;
		height: 42px;
		font-size: 12px;
		text-align: center;
		color: #333333;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 2;
		/* 限制为两行 */
	}
	
	.grid-item-sub-title {
		font-size: 10px;
		color: #333333;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		padding-right: 18px;
	}
	
	.tag-sub-padding {
		padding-left: 4px;
		padding-right: 4px;
		margin-right: 5px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	
	.drawer-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-left: 16px;
		margin-bottom: 16px;
		// width: 160rpx;
		// margin-left: 4px;
	}
	
	.section-item {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		justify-content: flex-start;
		margin-top: 6px;
		// width: 160rpx;
		// margin-left: 4px;
	}
	
	.section-title-space {
		display: flex;
		// flex-grow: 1;
		flex: 1;
	}
	
	.home-icon-bg {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		// flex: 1;
		flex-direction: row;
		// background-color: aqua;
		align-items: center;
		height: 100%;
		width: 420rpx;
		// width: 160rpx;
		// margin-left: 4px;
	}
	
	.text-h1 {
		font-size: 14px;
		font-weight: bold;
		color: black;
	}
	
	.text-h2 {
		font-size: 15px;
		font-weight: bold;
		color: black;
	}
	
	.navi-left-image {
		height: 22px;
		width: 22px;
	}
	
	.row_style {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
	}
	
	.cell-card {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
	}
	
	.tag-container {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		margin-top: 8px;
		align-items: center;
		justify-content: center;
	}
	
	.rank2-tag-container {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}
	
	.new-badge-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 20px;
		height: 20px;
	}
	
	.section-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 20px;
		height: 20px;
	}
	
	.section-image-drop-down {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		width: 28px;
		height: 30px;
	}
	
	.image-padding-left {
		width: 14px;
		height: 14px;
		padding-left: 1px;
	}
	
	.hr-line {
		height: 1px;
		/* 线的高 */
		background-color: #e5e5e5;
		/* 线的颜色 */
		border: none;
		/* 去除边框 */
		margin: 4px 0;
		/* 上下外边距 */
	}
	
	.drawer-image {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		width: 60%;
		// background-color: #ff0000;
	}
	
	.input-view {
		/* #ifndef APP-PLUS-NVUE */
		display: flex;
		/* #endif */
		flex: 1;
		// width: 100%;
		flex-direction: row-reverse;
		// background-color: #ff0000;
		height: 90%;
		flex-wrap: nowrap;
	}
	
	.beian-container {
		padding: 10px;
		text-align: center;
		font-size: 14px;
		color: #999;
	}
	
	.beian-text {
		margin-right: 8px;
	}
	
	.beian-link {
		color: #999;
		text-decoration: none;
		/* 取消下划线 */
	}
	
	.swiper-box {
		height: 100px;
	}
	
	.swiper-item {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
		justify-content: center;
		align-items: center;
		height: 50px;
	}
	//以下是下拉框的样式

	.filter-row {
	  // position: fixed;
	  position: fixed;
	  left: 0;
	  width: 100%;
	  // background-color: white; /* 防止背景透明导致下面的内容可见 */
	  z-index: 1000; /* 确保它在其他内容之上 */
	  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 添加阴影效果，增强视觉层次 */
	  display: flex;
	  flex-direction: row;
	  justify-content: center; /* 确保下拉框在一行内，并且间距均匀 */
	  align-items: center;
	  flex-wrap: nowrap; /* 强制不换行 */
	  background-color: white;
	  height: 40px;  
	}
	
	.filter-item {
	  // flex: 0 0 15%; /* 每个下拉框固定占用20%的宽度 */
	  min-width: 5%;
	  max-width: 50%;
	  display: flex;
	  justify-content: center;  /* 水平居中 */
	  align-items: center;      /* 垂直居中 */
	  box-sizing: border-box;
	  margin-left: 5px;
	  // background-color: #f0f0f0; /* 默认灰色背景 */
	}
	/* 默认未选择状态 - 灰色背景 */
	.filter-item .picker-text {
		display: flex;
	  border: 1px solid transparent;  /* 初始没有边框 */
	  background-color: #f0f0f0; /* 灰色背景 */
	  color: black;
	border: 1px solid transparent;  /* 初始没有边框 */
	// padding: 8px 16px;  /* 给一些内边距 */
	
	display: flex;          /* 确保使用flex布局 */
	align-items: center;    /* 垂直居中 */
	justify-content: center; /* 水平居中 */
		  
	}
	
	/* 选择状态 - 白色背景，红色边框，框内文字变红 */
	.filter-item.selected .picker-text {
		display: flex;
	  background-color: white;
	  border: 0.1px solid red;
	  color: red;
	  align-items: center; 
	  justify-content: center;  /* 水平居中 */
	}
	
	/* 选择全部状态 - 灰色背景 */
	.filter-item.all-selected .picker-text {
		display: flex;
	  background-color: #f0f0f0; /* 灰色背景 */
	  color: black;
	  align-items: center;	  
	  justify-content: center;  /* 水平居中 */
	}
	
	/* 下拉项的文字保持默认颜色 */
	.filter-item .dropdown-item {
	  color: blue;
	  font-size: 30px;
	}
	
	/* 当下拉项被选中时，确保它在下拉中显示正常颜色 */
	.filter-item .dropdown-item.selected {
	  color: blue;  /* 保持下拉选项文字颜色不变 */
	}	
	.picker-text {
	  display: flex;
	  justify-content: space-between;
	  align-items: center;
	  width: 100%; /* 占据整个 picker 的宽度 */
	  // padding-right: 20px; /* 确保文本和箭头之间有足够的间距 */
	  box-sizing: border-box;
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif;
	  font-size: 12px;
	}
	/* 设置圆角 */
	.rounded-corners {
	    border-radius: 5px; /* 圆角半径为2px */
	    /* 可以根据需要添加其他样式，比如背景颜色、文字对齐等 */
	    background-color: #f0f0f0; /* 示例背景色 */
	    padding: 5px; /* 示例内边距 */
	    display: inline-block; /* 确保背景和圆角只应用于文本区域 */
	}
	// .dropdown {
	// 	font-size: 20px;
	// 	position: absolute;
	// 	top: 25px;
	// 	width: 100%;
	// 	background-color: white;
	// 	border: 1px solid #ccc;
	// 	box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
	// }
	
	// .dropdown-item {
	// 	padding: 10px;
	// 	cursor: pointer;
	// }
	
	// .dropdown-item:hover {
	// 	background-color: #f5f5f5;
	// }

	// .picker-text::after {
	//   content: ''; /* 必须设置为空 */
	//   position: absolute;
	//   right: 8px; /* 调整箭头位置 */
	//   top: 50%;
	//   transform: translateY(-50%); /* 垂直居中 */
	//   pointer-events: none; /* 确保点击事件不会触发箭头 */
	//   width: 0;
	//   height: 0;
	//   border-left: 4px solid transparent;
	//   border-right: 4px solid transparent;
	//   border-top: 8px solid black;
	//   text-align: center;
	// }
	//以下为赛事详情布局
	.races-container {
	  display: flex;
	  justify-content: center; /* 使子项居中 */
		  // padding: 10px;
	  margin-top: 45px; /* 这个值应该等于 .filter-row 的高度 */
	  overflow-y: auto; /* 如果需要滚动 */
	  padding: 5px;
	  
	  // background-color: white;
	  
	}
	
	.race-item {
	  height: 110px;
	  // max-height: 152px;
	  border: 1px solid #ccc; /* 设置边框 */
	  border-radius: 10px; /* 设置圆角 */
	  margin-bottom: 5px;
	  position: relative;
	  // padding: 16px;
	  // margin-bottom: 16px;
	  cursor: pointer;
	  color: white;
	  background-color: #f0f0f0; /* 设置默认背景颜色 */
	  background-size: cover;
	  background-position: center;
	  transition: background-image 0.5s ease-in-out; /* 添加平滑过渡效果 */
	}
	.overlay {
	  border: 1px solid #ccc; /* 设置边框 */
	  border-radius: 10px; /* 设置圆角 */
	  position: absolute;
	  top: 0;
	  left: 0;
	  width: 100%;
	  height: 100%;
	  background-color: rgba(0, 0, 0, 0.3); /* 黑色背景，透明度 30% */
	  z-index: 1; /* 确保遮罩层在背景图片之上 */
	}
	
	.content {
	border: 1px solid #ccc; /* 设置边框 */
	border-radius: 10px; /* 设置圆角 */
	height: 110px;
	// min-height: 110px;
	// max-height: 132px;
	position: relative;
	z-index: 2; /* 确保内容在遮罩层之上 */
	}
	.main-title-container {
	  display: flex; /* 使子元素水平排列 */
	  flex-direction: row;
	  justify-content: space-between;
	}
	.title {
	  // display: flex; /* 使用 Flexbox */
	  width: 305px;
	  border-radius: 10px; /* 设置圆角 */
	  font-weight: bold;
	  // margin-bottom: 0px;
	  // margin-top: 8px;
	  // text-align: center;
	  color: white;        /* 设置文本颜色为白色 */
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
	  font-size: 15px;
	  min-height: 22px;
	  margin-left: 16px;
	  margin-top: 10px;
	  /* 设置固定宽度 */
	  max-width: 320px;
	  /* 确保元素内的文本不会换行 */
	  white-space: nowrap;
	  /* 超出部分隐藏 */
	  overflow: hidden;
	}
	
	.text {
	    /* 设置文本的最大宽度 */
	    max-width: 300px;
	    /* 确保文本不会换行 */
	    white-space: nowrap;
	    /* 超出部分隐藏 */
	    overflow: hidden;
	    /* 使用省略号代替超出部分 */
	    text-overflow: ellipsis;
	    /* 可选：根据设计需求调整 display 属性 */
	    display: inline-block;
	}
		
	.favorites-icon {
		margin-top: 10px;
		margin-right: 20px;
	  width: 25px;         /* 设置图标的宽度 */
	  height: 25px;        /* 设置图标的高度 */
	}
	.title-bar {
		// border: 1px solid #ccc; /* 设置边框 */
	  display: flex; /* 使用 Flexbox */
	  align-items: center; /* 垂直居中 */
	  // justify-content: center; /* 水平居中 */
	  border-radius: 10px; /* 设置圆角 */
	  font-size: 15px;
	  font-weight: bold;
	  margin-bottom: 1px;
	  margin-top: 1px;
	  margin-left: 30px;
	  // text-align: left;
	  color: white;        /* 设置文本颜色为白色 */
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
	  height: 30px;
	}
	.img-icon{
		height: 30px;
		width: 30px;
	}
	.title2 {
	  margin-left: 6px;
	  // display: flex; /* 使用 Flexbox */
	  // align-items: center; /* 垂直居中对齐 */
	  font-size: 11px;
	  // text-align: center;
	  color: white;        /* 设置文本颜色为白色 */
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
	  height: 16px;
	}
	
	.title-container {
		// align-items: center; /* 垂直居中 */
		display: flex; /* 使用 Flexbox */
		flex-direction: row;
		// justify-content: space-between;
		// width: 350px;
		height: 33px;
		// margin-top: 2px;
		margin-left: 16px;
	}
	.title-container-left {
		// display: flex; /* 使用 Flexbox */
		// flex-direction: column;
		// width: 260px;
		// height: 36px;
		// margin-top: 2px;
		// margin-left: 30px;
		// align-items: center; /* 垂直居中 */
		// display: flex; /* 使用 Flexbox */
		// flex-direction: column;
		// width: 288px;
		height: 33px;
		// margin-top: 2px;
		// margin-left: 30px;
		max-width: 358px;
		// margin-left: 10px;
	}
	.title-container-left-detail {
		align-items: center; /* 垂直居中 */
		display: flex; /* 使用 Flexbox */
		flex-direction: row;
		// width: 260px;
		height: 18px;
		// margin-top: 2px;
		// margin-left: 30px;
	}
	.title-container-right {
		justify-content: center;
		align-items: center; /* 垂直居中 */
		display: flex; /* 使用 Flexbox */
		width: 30px;
		height: 33px;
		// margin-top: 2px;
		margin-right: 8px;
	}
	.location-icon {
	  width: 12px;
	  height: 12px; /* 固定高度 */
	  // border-radius: 50%; /* 如果需要圆形图标 */
	  user-select: none; /* 禁止选择 */
	  pointer-events: none; /* 禁止所有指针事件，包括右键菜单 */
	  // filter: brightness(1000%) invert(1); /* 尝试将黑色变为白色 */
	}
	.race-details {
	  display: flex; /* 使子元素水平排列 */
	  flex-direction: row;
	  justify-content: space-between;
	  //align-items: center; /* 使左右部分垂直居中 *//
	  height: 30px;
	  // width: 376px;
	  // margin-top: 5px;
	  // margin-left: 30px;
	  margin-bottom: 6px;
	}
	.race-details-left {
	  display: flex; /* 使子元素水平排列 */
	  flex-direction: row;
	  align-items: center; /* 使左右部分垂直居中 */
	  height: 24px;
	  // width: 200px;
	  margin-left: 10px;
	  margin-top: 8px;
	}
	.race-details-right {
	  align-items: center; 
	  height: 30px;
	  // margin-top: 8px;
	  margin-right: 16px;
	}
	
	.detail-left {
	  margin-left: 0px; /* 留出间隔 */
	  width: 34px;
	  align-items: cen;
	}
	
	.race-icon {
	  width: 28px; /* 固定宽度 */
	  height: 28px; /* 固定高度 */
	  background-size: contain; /* 保持图片比例缩放 */
	  background-position: center; /* 图片居中显示 */
	  background-repeat: no-repeat; /* 防止图片重复 */
	  border-radius: 50%; /* 使图片变成圆形 */
	  user-select: none; /* 禁止选择 */
	    -moz-user-select: none;
	    -webkit-user-select: none;
	    -ms-user-select: none;
	    pointer-events: none; /* 禁止所有指针事件，包括右键菜单 */
	  // object-fit: cover; /* 保持图片比例并覆盖整个区域 */
	}
	
	.detail-right {
	  // margin-bottom: 0%;
	  margin-left: 39px;
	  font-size: 14px;
	  display: flex; /* 使右侧部分的内容按列排列 */
	  flex-direction: column; /* 强制右侧内容垂直排列 */
	  width: 55%;
	}

	
	.bottom-row {
	  margin-bottom: 0px;
	  display: flex;
	  // justify-content: space-between; /* 水平排列 */
	  align-items: center;

	  width: 160px;
	  // margin-top: 36px;
	}
	.top-row-text{
		width: 100%;
		font-size: 14px;
		font-weight: bold; /* 设置为粗体 */
		align-items: center; /* 垂直居中 */
		color: white;        /* 设置文本颜色为白色 */
		font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
	}
	.top-row-text2{
		font-size: 11px;
		font-weight: bold; /* 设置为粗体 */
		// margin-left: 50%;
	}
	.bottom-row-text{
	  width:80px;
	  height: 18px; 
	  line-height: 18px; 
	  color:#FDEFEF ; 
	  background-color: #E10225; 
	  text-align: center; 
	  font-size: 12px; 
	  font-weight: bold;
	  overflow: hidden; 
	  white-space: nowrap; 
	  margin-left: 6px;
	  border-radius: 2px; 
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif;
}
	
	.bottom-row-text2{
	  min-width: 30px;
	  max-width:70px;
	  height: 18px; 
	  line-height: 18px; 
	  color: #E10225;
	  background-color: #FDEFEF; 
	  text-align: center; 
	  font-size: 12px; 
	  font-weight: bold;
	  overflow: hidden; 
	  white-space: nowrap; 
	  margin-left: 10px;
	  border-radius: 2px; 
	  padding: 0 3px; /* 添加左右内边距 */
	  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; 
	}
	.bottom-row-text3{
		  min-width: 15px;
		  max-width:50px;
		  height: 18px; /* 设置高度为18像素 */
		  line-height: 18px; /* 确保文本垂直居中 */
		  color: #E10225; /* 设置字体颜色 */
		  background-color: #FDEFEF; /* 设置背景颜色 */
		  text-align: center; /* 水平居中文本 */
		  font-size: 12px; /* 根据需要调整字体大小以适应容器 */
		  font-weight: bold;
		  overflow: hidden; /* 防止内容溢出 */
		  white-space: nowrap; /* 防止文本换行 */
		  margin-left: 10px;
		  border-radius: 2px; /* 设置圆角 */
		  padding: 0 3px; /* 添加左右内边距 */
		  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
	}
	.bottom-row-text4{
		 width: 66px;
		  height: 30px; /* 设置高度为24像素 */
		  color: white; /* 设置字体颜色 */
		  background-color: #E10225; /* 设置背景颜色 */
		  text-align: center; /* 水平居中文本 */
		  font-size: 14px; /* 根据需要调整字体大小以适应容器 */
		  overflow: hidden; /* 防止内容溢出 */
		  white-space: nowrap; /* 防止文本换行 */
		  margin-left: 58px;
		  border-radius: 4px; /* 设置圆角 */
		  font-family: 'Noto Sans CJK SC', '思源黑体', sans-serif; /* 使用正确的字体族属性 */
		  display: flex; /* 使用 Flexbox */
		  align-items: center; /* 垂直居中对齐 */
		  justify-content: center; /* 水平居中对齐 */
		  box-sizing: border-box; /* 确保内边距不会增加元素的宽度 */
	}
	
	.share-button {
	  display: flex;
	  align-items: center;
	  justify-content: center;
	  padding: 0; /* 移除默认内边距 */
	  margin: 0; /* 移除默认外边距 */
	  background-color: white; /* 设置背景透明 */
	  border: none; /* 移除边框 */
	  outline: none; /* 移除点击时的轮廓线 */
	  cursor: pointer; /* 改变鼠标指针样式 */
	}
	
	.navi-left-image.home-icon {
	  width: 30px; /* 根据需要调整尺寸 */
	  height: 30px; /* 根据需要调整尺寸 */
	  object-fit: cover; /* 确保图片按照原比例缩放 */
	}
	.content-scroll {
	  flex-grow: 1;
	}
	.dropdown {
	  /* 样式调整下拉菜单 */
	  border: 1px solid #ccc;
	  padding: 5px 0;
	  background-color: white;
	  width: 100px;
	  text-align: center;
	}
	.dropdown-item {
	  padding: 10px;
	  cursor: pointer;
	}
</style>